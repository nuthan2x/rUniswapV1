{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506188298061002d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001455760003560e01c806397754ae911620000bb578063c88a5e6d116200007a578063c88a5e6d14620002b9578063d06d822914620002d0578063d82555f114620002e7578063e9a79a7b14620002fe578063fa7626d4146200031557600080fd5b806397754ae914620002425780639a8325a01462000259578063af9bbe5f1462000270578063b9c071b41462000287578063ba414fa6146200029e57600080fd5b80632d6c17a311620001085780632d6c17a314620001cf5780633a76846314620001e65780633bf82db114620001fd5780636bce989b14620002145780636f597075146200022b57600080fd5b80630a9254e4146200014a578063108554f21462000156578063233240ee146200016d57806329a9e300146200018457806329ce9dde146200019b575b600080fd5b6200015462000323565b005b620001546200016736600462002ad7565b6200096b565b620001546200017e366004620029be565b62000a44565b6200015462000195366004620029fc565b62000b20565b620001b2620001ac36600462002d07565b62000bd2565b6040516001600160a01b0390911681526020015b60405180910390f35b62000154620001e036600462002d79565b62000c9b565b620001b2600080516020620087b483398151915281565b620001546200020e36600462002a39565b62000cdb565b620001546200022536600462002a39565b62000dbd565b620001546200023c366004620029be565b62000dd1565b620001546200025336600462002a7e565b62000e7b565b620001b26200026a36600462002cc8565b620010bc565b620001546200028136600462002a39565b62001161565b620001546200029836600462002d79565b6200120f565b620002a862001230565b6040519015158152602001620001c6565b62000154620002ca36600462002ad7565b62001361565b62000154620002e1366004620029fc565b62001397565b62000154620002f836600462002a39565b62001449565b620001546200030f36600462002ad7565b620014fa565b600054620002a89060ff1681565b60405162000331906200281b565b604051809103906000f0801580156200034e573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560405163792e11f560e01b81526002600482015263792e11f590602401600060405180830381600087803b158015620003a657600080fd5b505af1158015620003bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003e5919081019062002b05565b8051620003fb91600e9160209091019062002829565b50600e6000815481106200041f57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600f80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b8152600481019290925260248201526005604482015264757365723160d81b6064820152600080516020620087b48339815191529063c657c71890608401600060405180830381600087803b158015620004ae57600080fd5b505af1158015620004c3573d6000803e3d6000fd5b50505050600e600181548110620004ea57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154601080546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b81526004810192909252602482015260056044820152643ab9b2b91960d91b6064820152600080516020620087b48339815191529063c657c71890608401600060405180830381600087803b1580156200057957600080fd5b505af11580156200058e573d6000803e3d6000fd5b50505050686c6b935b8bbd400000604051620005aa9062002893565b6060808252600a908201526904d4f434b5f45524332360b41b608082015260a060208201819052600490820152634d4f434b60e01b60c0820152604081019190915260e001604051809103906000f0801580156200060c573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055604051686c6b935b8bbd40000090620006469062002893565b6060808252600a90820152690524f434b5f45524332360b41b608082015260a06020820181905260049082015263524f434b60e01b60c0820152604081019190915260e001604051809103906000f080158015620006a8573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055604051620006d790620028a1565b604051809103906000f080158015620006f4573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b03928316908117909155600b54604051630b2479c760e11b81529216600483015290631648f38e90602401602060405180830381600087803b1580156200075057600080fd5b505af115801562000765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078b9190620029dd565b600980546001600160a01b0319166001600160a01b03928316179055600d54600c54604051630b2479c760e11b81529083166004820152911690631648f38e90602401602060405180830381600087803b158015620007e957600080fd5b505af1158015620007fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008249190620029dd565b600a80546001600160a01b0319166001600160a01b03928316179055600b5460095460405163095ea7b360e01b81529183169263095ea7b3926200087a9290911690686c6b935b8bbd4000009060040162002e52565b602060405180830381600087803b1580156200089557600080fd5b505af1158015620008aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008d0919062002c14565b50600c54600a5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200091292911690686c6b935b8bbd4000009060040162002e52565b602060405180830381600087803b1580156200092d57600080fd5b505af115801562000942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000968919062002c14565b50565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d90620009a1908590859060040162002e52565b600060405180830381600087803b158015620009bc57600080fd5b505af1158015620009d1573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620087b483398151915292506306447d5691506024015b600060405180830381600087803b15801562000a2757600080fd5b505af115801562000a3c573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000a7e908490600160801b9060040162002e52565b600060405180830381600087803b15801562000a9957600080fd5b505af115801562000aae573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620087b4833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000b0457600080fd5b505af115801562000b19573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000b5a908590600160801b9060040162002e52565b600060405180830381600087803b15801562000b7557600080fd5b505af115801562000b8a573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620087b483398151915292506347e50cce915060440162000a0c565b604051638d1cc92560e01b81526000908190600080516020620087b483398151915290638d1cc9259062000c0b90879060040162002ebc565b600060405180830381600087803b15801562000c2657600080fd5b505af115801562000c3b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c65919081019062002c4c565b8360405160200162000c7992919062002e1f565b60405160208183030381529060405290508051602082016000f0949350505050565b600080516020620087b483398151915263e5d6bf0262000cbc83426200302a565b6040518263ffffffff1660e01b815260040162000ae991815260200190565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000d11908690859060040162002e52565b600060405180830381600087803b15801562000d2c57600080fd5b505af115801562000d41573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620087b483398151915292506345b5607891506044015b600060405180830381600087803b15801562000d9f57600080fd5b505af115801562000db4573d6000803e3d6000fd5b50505050505050565b62000dcc838383600062000e7b565b505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000e0b908490600160801b9060040162002e52565b600060405180830381600087803b15801562000e2657600080fd5b505af115801562000e3b573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620087b483398151915292506306447d56915060240162000ae9565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000ed19162002e01565b6000604051808303816000865af19150503d806000811462000f10576040519150601f19603f3d011682016040523d82523d6000602084013e62000f15565b606091505b5091505060008180602001905181019062000f31919062002c33565b905062000fa38462000f9c8762000f736370a0823160e01b62000f5660018d620015a0565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620015c5565b821562000a3c5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000fee919062002e01565b6000604051808303816000865af19150503d80600081146200102d576040519150601f19603f3d011682016040523d82523d6000602084013e62001032565b606091505b509150506000818060200190518101906200104e919062002c33565b90508286101562001079576200106586846200302a565b6200107190826200302a565b905062001094565b6200108583876200302a565b62001091908262002fed565b90505b620010b28162000f9c6318160ddd60e01b62000f5660018d620015a0565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620087b483398151915290638d1cc92590620010f590869060040162002ebc565b600060405180830381600087803b1580156200111057600080fd5b505af115801562001125573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200114f919081019062002c4c565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062001197908690859060040162002e52565b600060405180830381600087803b158015620011b257600080fd5b505af1158015620011c7573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620087b483398151915292506347e50cce915060440162000d84565b600080516020620087b483398151915263e5d6bf0262000cbc834262002fed565b60008054610100900460ff1615620012515750600054610100900460ff1690565b6000600080516020620087b48339815191523b156200135c57604051600090600080516020620087b4833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620012be9083906519985a5b195960d21b9060200162002e52565b60408051601f1981840301815290829052620012de929160200162002dce565b60408051601f1981840301815290829052620012fa9162002e01565b6000604051808303816000865af19150503d806000811462001339576040519150601f19603f3d011682016040523d82523d6000602084013e6200133e565b606091505b509150508080602001905181019062001358919062002c14565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000a0c908590859060040162002e52565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d90620013d1908590600160801b9060040162002e52565b600060405180830381600087803b158015620013ec57600080fd5b505af115801562001401573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620087b483398151915292506345b56078915060440162000a0c565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051620014cf906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000dcc8162000f9c8462000f736370a0823160e01b62000f5660018a620015a0565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062001530908590859060040162002e52565b600060405180830381600087803b1580156200154b57600080fd5b505af115801562001560573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620087b4833981519152925063ca669fa7915060240162000a0c565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b620015d18282620015d5565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200164857602002820191906000526020600020905b81548152602001906001019080831162001633575b505050505090506000836200165d8362001957565b6040516020016200167092919062002dce565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620016c491869188910162002d92565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620016ff57620016fd8762001a23565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200174091879189910162002d92565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162001787919062002e01565b600060405180830381855afa9150503d8060008114620017c4576040519150601f19603f3d011682016040523d82523d6000602084013e620017c9565b606091505b509150620017e6905081620017e088602062003008565b62002785565b604051630667f9d760e41b815290925060009150600080516020620087b48339815191529063667f9d709062001823908b90879060040162002e52565b602060405180830381600087803b1580156200183e57600080fd5b505af115801562001853573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001879919062002c33565b9050808214620018a65760405162461bcd60e51b81526004016200189d9062002ef1565b60405180910390fd5b6040516370ca10bb60e01b8152600080516020620087b4833981519152906370ca10bb90620018de908b9087908e9060040162002e6b565b600060405180830381600087803b158015620018f957600080fd5b505af11580156200190e573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200194360028b016000620028af565b896004016000905550505050505050505050565b60606000825160206200196b919062003008565b67ffffffffffffffff8111156200199257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015620019bd576020820181803683370190505b50905060005b835181101562001a1c576000848281518110620019f057634e487b7160e01b600052603260045260246000fd5b60200260200101519050808260200260200184015250808062001a139062003077565b915050620019c3565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562001a9557602002820191906000526020600020905b81548152602001906001019080831162001a80575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062001ae19250859187910162002d92565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562001b80576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162001b5091859187910162002d92565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362001b8e8362001957565b60405160200162001ba192919062002dce565b6040516020818303038152906040529050600080516020620087d483398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001c0057600080fd5b505af115801562001c15573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162001c36919062002e01565b600060405180830381855afa9150503d806000811462001c73576040519150601f19603f3d011682016040523d82523d6000602084013e62001c78565b606091505b50915062001c8f905081620017e087602062003008565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620087b4833981519152906365bc948190602401600060405180830381600087803b15801562001ce757600080fd5b505af115801562001cfc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d26919081019062002bac565b50905080516001141562002030576000600080516020620087d483398151915260001c6001600160a01b031663667f9d70898460008151811062001d7a57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b815260040162001da192919062002e52565b602060405180830381600087803b15801562001dbc57600080fd5b505af115801562001dd1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001df7919062002c33565b90508062001e67577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062001e4357634e487b7160e01b600052603260045260246000fd5b602002602001015160001c60405162001e5e92919062002e52565b60405180910390a15b80831462001e895760405162461bcd60e51b81526004016200189d9062002ef1565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162001ec192919062002d92565b604051602081830303815290604052805190602001208560008151811062001ef957634e487b7160e01b600052603260045260246000fd5b602002602001015160001c60405162001f16949392919062002e8c565b60405180910390a18160008151811062001f4057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262001f8b918a918c910162002d92565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162001ff5918a918c910162002d92565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002635565b600181511115620025e15760005b8151811015620025da576000600080516020620087d483398151915260001c6001600160a01b031663667f9d708a8585815181106200208d57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401620020b492919062002e52565b602060405180830381600087803b158015620020cf57600080fd5b505af1158015620020e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200210a919062002c33565b90508062002179577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200215557634e487b7160e01b600052603260045260246000fd5b602002602001015160001c6040516200217092919062002e52565b60405180910390a15b600080516020620087d483398151915260001c6001600160a01b03166370ca10bb8a858581518110620021bc57634e487b7160e01b600052603260045260246000fd5b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620021ea9392919062002e6b565b600060405180830381600087803b1580156200220557600080fd5b505af11580156200221a573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200223c919062002e01565b600060405180830381855afa9150503d806000811462002279576040519150601f19603f3d011682016040523d82523d6000602084013e6200227e565b606091505b5090925090506200229681620017e08b602062003008565b9550818015620022aa575061133760f01b86145b1562002521577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620022e892919062002d92565b604051602081830303815290604052805190602001208888815181106200231f57634e487b7160e01b600052603260045260246000fd5b602002602001015160001c6040516200233c949392919062002e8c565b60405180910390a18484815181106200236557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092620023b0918d918f910162002d92565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200243d92919062002d92565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620087d483398151915260001c6001600160a01b03166370ca10bb8c878781518110620024bb57634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b8152600401620024e49392919062002e6b565b600060405180830381600087803b158015620024ff57600080fd5b505af115801562002514573d6000803e3d6000fd5b50505050505050620025da565b600080516020620087d483398151915260001c6001600160a01b03166370ca10bb8c8787815181106200256457634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b81526004016200258d9392919062002e6b565b600060405180830381600087803b158015620025a857600080fd5b505af1158015620025bd573d6000803e3d6000fd5b505050505050508080620025d19062003077565b9150506200203e565b5062002635565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b60648201526084016200189d565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620026799188918a910162002d92565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620026db5760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b60448201526064016200189d565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200270c60028a016000620028af565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620027529188918a910162002d92565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200279c5784516200279f565b60205b905060005b818110156200281157620027ba81600862003008565b86620027c7838862002fed565b81518110620027e657634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916901c929092179180620028088162003077565b915050620027a4565b5090949350505050565b612abf80620030e783390190565b82805482825590600052602060002090810192821562002881579160200282015b828111156200288157825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200284a565b506200288f929150620028ca565b5090565b610bed8062005ba683390190565b612021806200679383390190565b50805460008255906000526020600020908101906200096891905b5b808211156200288f5760008155600101620028cb565b6000620028f8620028f28462002fc2565b62002f67565b90508281528383830111156200290d57600080fd5b828260208301376000602084830101529392505050565b600082601f83011262002935578081fd5b8151602062002948620028f28362002f9b565b80838252828201915082860187848660051b890101111562002968578586fd5b855b8581101562002988578151845292840192908401906001016200296a565b5090979650505050505050565b600082601f830112620029a6578081fd5b620029b783833560208501620028e1565b9392505050565b600060208284031215620029d0578081fd5b8135620029b781620030c1565b600060208284031215620029ef578081fd5b8151620029b781620030c1565b6000806040838503121562002a0f578081fd5b823562002a1c81620030c1565b9150602083013562002a2e81620030c1565b809150509250929050565b60008060006060848603121562002a4e578081fd5b833562002a5b81620030c1565b9250602084013562002a6d81620030c1565b929592945050506040919091013590565b6000806000806080858703121562002a94578081fd5b843562002aa181620030c1565b9350602085013562002ab381620030c1565b925060408501359150606085013562002acc81620030d7565b939692955090935050565b6000806040838503121562002aea578182fd5b823562002af781620030c1565b946020939093013593505050565b6000602080838503121562002b18578182fd5b825167ffffffffffffffff81111562002b2f578283fd5b8301601f8101851362002b40578283fd5b805162002b51620028f28262002f9b565b80828252848201915084840188868560051b870101111562002b71578687fd5b8694505b8385101562002ba057805162002b8b81620030c1565b83526001949094019391850191850162002b75565b50979650505050505050565b6000806040838503121562002bbf578182fd5b825167ffffffffffffffff8082111562002bd7578384fd5b62002be58683870162002924565b9350602085015191508082111562002bfb578283fd5b5062002c0a8582860162002924565b9150509250929050565b60006020828403121562002c26578081fd5b8151620029b781620030d7565b60006020828403121562002c45578081fd5b5051919050565b60006020828403121562002c5e578081fd5b815167ffffffffffffffff81111562002c75578182fd5b8201601f8101841362002c86578182fd5b805162002c97620028f28262002fc2565b81815285602083850101111562002cac578384fd5b62002cbf82602083016020860162003044565b95945050505050565b60006020828403121562002cda578081fd5b813567ffffffffffffffff81111562002cf1578182fd5b62002cff8482850162002995565b949350505050565b6000806040838503121562002d1a578182fd5b823567ffffffffffffffff8082111562002d32578384fd5b62002d408683870162002995565b9350602085013591508082111562002d56578283fd5b508301601f8101851362002d68578182fd5b62002c0a85823560208401620028e1565b60006020828403121562002d8b578081fd5b5035919050565b825160009082906020808701845b8381101562002dbe5781518552938201939082019060010162002da0565b5050948252509092019392505050565b6001600160e01b031983168152815160009062002df381600485016020870162003044565b919091016004019392505050565b6000825162002e1581846020870162003044565b9190910192915050565b6000835162002e3381846020880162003044565b83519083019062002e4981836020880162003044565b01949350505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b602081526000825180602084015262002edd81604085016020870162003044565b601f01601f19169190910160400192915050565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002f935762002f93620030ab565b604052919050565b600067ffffffffffffffff82111562002fb85762002fb8620030ab565b5060051b60200190565b600067ffffffffffffffff82111562002fdf5762002fdf620030ab565b50601f01601f191660200190565b6000821982111562003003576200300362003095565b500190565b600081600019048311821515161562003025576200302562003095565b500290565b6000828210156200303f576200303f62003095565b500390565b60005b838110156200306157818101518382015260200162003047565b8381111562003071576000848401525b50505050565b60006000198214156200308e576200308e62003095565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200096857600080fd5b80151581146200096857600080fdfe6000805460ff191660011790556b75736572206164647265737360a01b60a052600c60805260ac6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db760085534801561005957600080fd5b50612a56806100696000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639a8325a0116100b8578063c88a5e6d1161007c578063c88a5e6d146102c3578063d06d8229146102d6578063d82555f1146102e9578063e9a79a7b146102fc578063f82de7b01461030f578063fa7626d41461032257600080fd5b80639a8325a014610246578063af9bbe5f14610259578063b90a68fa1461026c578063b9c071b414610298578063ba414fa6146102ab57600080fd5b80633a7684631161010a5780633a768463146101c55780633bf82db1146101da5780636bce989b146101ed5780636f59707514610200578063792e11f51461021357806397754ae91461023357600080fd5b8063108554f214610147578063233240ee1461015c57806329a9e3001461016f57806329ce9dde146101825780632d6c17a3146101b2575b600080fd5b61015a610155366004612499565b61032f565b005b61015a61016a366004612397565b610400565b61015a61017d3660046123cf565b6104d4565b610195610190366004612607565b61057f565b6040516001600160a01b0390911681526020015b60405180910390f35b61015a6101c0366004612671565b61063f565b6101956000805160206129e183398151915281565b61015a6101e8366004612407565b61067b565b61015a6101fb366004612407565b610755565b61015a61020e366004612397565b610767565b610226610221366004612671565b61080a565b6040516101a991906127a9565b61015a610241366004612447565b6109a5565b6101956102543660046125cc565b610bc5565b61015a610267366004612407565b610c63565b600880546040805160208082018490528251808303820181529183019092528051910120909155610195565b61015a6102a6366004612671565b610d0a565b6102b3610d28565b60405190151581526020016101a9565b61015a6102d1366004612499565b610e4b565b61015a6102e43660046123cf565b610e7e565b61015a6102f7366004612407565b610f29565b61015a61030a366004612499565b610fd4565b61015a61031d366004612671565b611073565b6000546102b39060ff1681565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610362908590859060040161273f565b600060405180830381600087803b15801561037c57600080fd5b505af1158015610390573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206129e183398151915292506306447d5691506024015b600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610437908490600160801b9060040161273f565b600060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206129e1833981519152925063ca669fa791506024015b600060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d9061050b908590600160801b9060040161273f565b600060405180830381600087803b15801561052557600080fd5b505af1158015610539573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206129e183398151915292506347e50cce91506044016103ca565b604051638d1cc92560e01b815260009081906000805160206129e183398151915290638d1cc925906105b59087906004016127f6565b600060405180830381600087803b1580156105cf57600080fd5b505af11580156105e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261060b9190810190612559565b8360405160200161061d929190612710565b60405160208183030381529060405290508051602082016000f0949350505050565b6000805160206129e183398151915263e5d6bf0261065d834261292f565b6040518263ffffffff1660e01b815260040161049f91815260200190565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d906106ae908690859060040161273f565b600060405180830381600087803b1580156106c857600080fd5b505af11580156106dc573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206129e183398151915292506345b5607891506044015b600060405180830381600087803b15801561073857600080fd5b505af115801561074c573d6000803e3d6000fd5b50505050505050565b61076283838360006109a5565b505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d9061079e908490600160801b9060040161273f565b600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206129e183398151915292506306447d56915060240161049f565b606060008267ffffffffffffffff81111561083557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561085e578160200160208202803683370190505b50905060005b8381101561099e576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108a957600080fd5b505af11580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e191906123b3565b60405163c88a5e6d60e01b81529091506000805160206129e18339815191529063c88a5e6d9061092090849068056bc75e2d631000009060040161273f565b600060405180830381600087803b15801561093a57600080fd5b505af115801561094e573d6000803e3d6000fd5b505050508083838151811061097357634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152508061099681612976565b915050610864565b5092915050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916109f9916126f4565b6000604051808303816000865af19150503d8060008114610a36576040519150601f19603f3d011682016040523d82523d6000602084013e610a3b565b606091505b50915050600081806020019051810190610a559190612541565b9050610ac184610abb87610a926370a0823160e01b610a7560018d6110b4565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b906110d9565b82156103f85760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691610b0991906126f4565b6000604051808303816000865af19150503d8060008114610b46576040519150601f19603f3d011682016040523d82523d6000602084013e610b4b565b606091505b50915050600081806020019051810190610b659190612541565b905082861015610b8a57610b79868461292f565b610b83908261292f565b9050610ba1565b610b94838761292f565b610b9e90826128f8565b90505b610bbb81610abb6318160ddd60e01b610a7560018d6110b4565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206129e183398151915290638d1cc92590610bfb9086906004016127f6565b600060405180830381600087803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c519190810190612559565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610c96908690859060040161273f565b600060405180830381600087803b158015610cb057600080fd5b505af1158015610cc4573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206129e183398151915292506347e50cce915060440161071e565b6000805160206129e183398151915263e5d6bf0261065d83426128f8565b60008054610100900460ff1615610d485750600054610100900460ff1690565b60006000805160206129e18339815191523b15610e46576040516000906000805160206129e1833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490610db09083906519985a5b195960d21b9060200161273f565b60408051601f1981840301815290829052610dce92916020016126c3565b60408051601f1981840301815290829052610de8916126f4565b6000604051808303816000865af19150503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b5091505080806020019051810190610e429190612525565b9150505b919050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d906103ca908590859060040161273f565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610eb5908590600160801b9060040161273f565b600060405180830381600087803b158015610ecf57600080fd5b505af1158015610ee3573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206129e183398151915292506345b5607891506044016103ca565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051610fae906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a161076281610abb84610a926370a0823160e01b610a7560018a6110b4565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90611007908590859060040161273f565b600060405180830381600087803b15801561102157600080fd5b505af1158015611035573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03851660048201526000805160206129e1833981519152925063ca669fa791506024016103ca565b600061107f82436128f8565b6040516301f7b4f360e41b8152600481018290529091506000805160206129e183398151915290631f7b4f30906024016103ca565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b6110e382826110e7565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561115857602002820191906000526020600020905b815481526020019060010190808311611144575b5050505050905060008361116b83611443565b60405160200161117c9291906126c3565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916111ce918691889101612689565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1661120657611204876114ff565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391611245918791899101612689565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405161128a91906126f4565b600060405180830381855afa9150503d80600081146112c5576040519150601f19603f3d011682016040523d82523d6000602084013e6112ca565b606091505b5091506112e39050816112de886020612910565b6121eb565b604051630667f9d760e41b8152909250600091506000805160206129e18339815191529063667f9d709061131d908b90879060040161273f565b602060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190612541565b90508082146113995760405162461bcd60e51b815260040161139090612829565b60405180910390fd5b6040516370ca10bb60e01b81526000805160206129e1833981519152906370ca10bb906113ce908b9087908e90600401612758565b600060405180830381600087803b1580156113e857600080fd5b505af11580156113fc573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561142f60028b016000612276565b896004016000905550505050505050505050565b60606000825160206114559190612910565b67ffffffffffffffff81111561147b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156114a5576020820181803683370190505b50905060005b835181101561099e5760008482815181106114d657634e487b7160e01b600052603260045260246000fd5b6020026020010151905080826020026020018401525080806114f790612976565b9150506114ab565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561156f57602002820191906000526020600020905b81548152602001906001019080831161155b575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506115b992508591879101612689565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615611655576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291611625918591879101612689565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361166183611443565b6040516020016116729291906126c3565b6040516020818303038152906040529050600080516020612a0183398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156116cf57600080fd5b505af11580156116e3573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405161170291906126f4565b600060405180830381855afa9150503d806000811461173d576040519150601f19603f3d011682016040523d82523d6000602084013e611742565b606091505b5091506117569050816112de876020612910565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206129e1833981519152906365bc948190602401600060405180830381600087803b1580156117ac57600080fd5b505af11580156117c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117e891908101906124c4565b509050805160011415611ad7576000600080516020612a0183398151915260001c6001600160a01b031663667f9d70898460008151811061183957634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b815260040161185e92919061273f565b602060405180830381600087803b15801561187857600080fd5b505af115801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b09190612541565b90508061191c577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106118fa57634e487b7160e01b600052603260045260246000fd5b602002602001015160001c60405161191392919061273f565b60405180910390a15b80831461193b5760405162461bcd60e51b815260040161139090612829565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001611971929190612689565b60405160208183030381529060405280519060200120856000815181106119a857634e487b7160e01b600052603260045260246000fd5b602002602001015160001c6040516119c39493929190612779565b60405180910390a1816000815181106119ec57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611a35918a918c9101612689565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391611a9d918a918c9101612689565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506120a3565b6001815111156120505760005b815181101561204a576000600080516020612a0183398151915260001c6001600160a01b031663667f9d708a858581518110611b3057634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401611b5592919061273f565b602060405180830381600087803b158015611b6f57600080fd5b505af1158015611b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba79190612541565b905080611c12577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611bf057634e487b7160e01b600052603260045260246000fd5b602002602001015160001c604051611c0992919061273f565b60405180910390a15b600080516020612a0183398151915260001c6001600160a01b03166370ca10bb8a858581518110611c5357634e487b7160e01b600052603260045260246000fd5b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401611c7f93929190612758565b600060405180830381600087803b158015611c9957600080fd5b505af1158015611cad573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051611ccd91906126f4565b600060405180830381855afa9150503d8060008114611d08576040519150601f19603f3d011682016040523d82523d6000602084013e611d0d565b606091505b509092509050611d22816112de8b6020612910565b9550818015611d35575061133760f01b86145b15611f9a577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001611d70929190612689565b60405160208183030381529060405280519060200120888881518110611da657634e487b7160e01b600052603260045260246000fd5b602002602001015160001c604051611dc19493929190612779565b60405180910390a1848481518110611de957634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611e32918d918f9101612689565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001611ebd929190612689565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020612a0183398151915260001c6001600160a01b03166370ca10bb8c878781518110611f3957634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b8152600401611f6093929190612758565b600060405180830381600087803b158015611f7a57600080fd5b505af1158015611f8e573d6000803e3d6000fd5b5050505050505061204a565b600080516020612a0183398151915260001c6001600160a01b03166370ca10bb8c878781518110611fdb57634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b815260040161200293929190612758565b600060405180830381600087803b15801561201c57600080fd5b505af1158015612030573d6000803e3d6000fd5b50505050505050808061204290612976565b915050611ae4565b506120a3565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b6064820152608401611390565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916120e59188918a9101612689565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166121455760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b6044820152606401611390565b6005890180546001600160a01b031916905560038901805463ffffffff1916905561217460028a016000612276565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916121b89188918a9101612689565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111612200578451612203565b60205b905060005b8181101561226c5761221b816008612910565b8661222683886128f8565b8151811061224457634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916901c92909217918061226481612976565b915050612208565b5090949350505050565b50805460008255906000526020600020908101906122949190612297565b50565b5b808211156122ac5760008155600101612298565b5090565b60006122c36122be846128d0565b61289f565b90508281528383830111156122d757600080fd5b828260208301376000602084830101529392505050565b600082601f8301126122fe578081fd5b8151602067ffffffffffffffff82111561231a5761231a6129a7565b8160051b61232982820161289f565b838152828101908684018388018501891015612343578687fd5b8693505b85841015612365578051835260019390930192918401918401612347565b50979650505050505050565b600082601f830112612381578081fd5b612390838335602085016122b0565b9392505050565b6000602082840312156123a8578081fd5b8135612390816129bd565b6000602082840312156123c4578081fd5b8151612390816129bd565b600080604083850312156123e1578081fd5b82356123ec816129bd565b915060208301356123fc816129bd565b809150509250929050565b60008060006060848603121561241b578081fd5b8335612426816129bd565b92506020840135612436816129bd565b929592945050506040919091013590565b6000806000806080858703121561245c578081fd5b8435612467816129bd565b93506020850135612477816129bd565b925060408501359150606085013561248e816129d2565b939692955090935050565b600080604083850312156124ab578182fd5b82356124b6816129bd565b946020939093013593505050565b600080604083850312156124d6578182fd5b825167ffffffffffffffff808211156124ed578384fd5b6124f9868387016122ee565b9350602085015191508082111561250e578283fd5b5061251b858286016122ee565b9150509250929050565b600060208284031215612536578081fd5b8151612390816129d2565b600060208284031215612552578081fd5b5051919050565b60006020828403121561256a578081fd5b815167ffffffffffffffff811115612580578182fd5b8201601f81018413612590578182fd5b805161259e6122be826128d0565b8181528560208385010111156125b2578384fd5b6125c3826020830160208601612946565b95945050505050565b6000602082840312156125dd578081fd5b813567ffffffffffffffff8111156125f3578182fd5b6125ff84828501612371565b949350505050565b60008060408385031215612619578182fd5b823567ffffffffffffffff80821115612630578384fd5b61263c86838701612371565b93506020850135915080821115612651578283fd5b508301601f81018513612662578182fd5b61251b858235602084016122b0565b600060208284031215612682578081fd5b5035919050565b825160009082906020808701845b838110156126b357815185529382019390820190600101612697565b5050948252509092019392505050565b6001600160e01b03198316815281516000906126e6816004850160208701612946565b919091016004019392505050565b60008251612706818460208701612946565b9190910192915050565b60008351612722818460208801612946565b835190830190612736818360208801612946565b01949350505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b6020808252825182820181905260009190848201906040850190845b818110156127ea5783516001600160a01b0316835292840192918401916001016127c5565b50909695505050505050565b6020815260008251806020840152612815816040850160208701612946565b601f01601f19169190910160400192915050565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b604051601f8201601f1916810167ffffffffffffffff811182821017156128c8576128c86129a7565b604052919050565b600067ffffffffffffffff8211156128ea576128ea6129a7565b50601f01601f191660200190565b6000821982111561290b5761290b612991565b500190565b600081600019048311821515161561292a5761292a612991565b500290565b60008282101561294157612941612991565b500390565b60005b83811015612961578181015183820152602001612949565b83811115612970576000848401525b50505050565b600060001982141561298a5761298a612991565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461229457600080fd5b801515811461229457600080fdfe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220a3d80cba2e373b69bdb84406e2885e031302649a8eebc9c8318d3fff2b1629c864736f6c6343000804003360806040523480156200001157600080fd5b5060405162000bed38038062000bed8339810160408190526200003491620002a0565b8251839083906200004d90600390602085019062000147565b5080516200006390600490602084019062000147565b5050506200007833826200008160201b60201c565b50505062000388565b6001600160a01b038216620000dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f0919062000310565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001559062000335565b90600052602060002090601f016020900481019282620001795760008555620001c4565b82601f106200019457805160ff1916838001178555620001c4565b82800160010185558215620001c4579182015b82811115620001c4578251825591602001919060010190620001a7565b50620001d2929150620001d6565b5090565b5b80821115620001d25760008155600101620001d7565b600082601f830112620001fe578081fd5b81516001600160401b03808211156200021b576200021b62000372565b604051601f8301601f19908116603f0116810190828211818310171562000246576200024662000372565b8160405283815260209250868385880101111562000262578485fd5b8491505b8382101562000285578582018301518183018401529082019062000266565b838211156200029657848385830101525b9695505050505050565b600080600060608486031215620002b5578283fd5b83516001600160401b0380821115620002cc578485fd5b620002da87838801620001ed565b94506020860151915080821115620002f0578384fd5b50620002ff86828701620001ed565b925050604084015190509250925092565b600082198211156200033057634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200034a57607f821691505b602082108114156200036c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61085580620003986000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061076d565b60405180910390f35b6100df6100da366004610744565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610709565b61024a565b604051601281526020016100c3565b6100df610131366004610744565b61026e565b6100f36101443660046106b6565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610744565b61029f565b6100df610188366004610744565b61031f565b6100f361019b3660046106d7565b61032d565b6060600380546101af906107e4565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107e4565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107c0565b610358565b6060600480546101af906107e4565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b80356001600160a01b03811681146106b157600080fd5b919050565b6000602082840312156106c7578081fd5b6106d08261069a565b9392505050565b600080604083850312156106e9578081fd5b6106f28361069a565b91506107006020840161069a565b90509250929050565b60008060006060848603121561071d578081fd5b6107268461069a565b92506107346020850161069a565b9150604084013590509250925092565b60008060408385031215610756578182fd5b61075f8361069a565b946020939093013593505050565b6000602080835283518082850152825b818110156107995785810183015185820160400152820161077d565b818111156107aa5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156107df57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806107f857607f821691505b6020821081141561081957634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207b4b307dc52dd4093bd94993f54fab136cfdf36d105b10a83f903b0f470ed01864736f6c63430008040033608060405234801561001057600080fd5b50612001806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306f2bf62146100465780630dd94b961461008e5780631648f38e146100b7575b600080fd5b610072610054366004610201565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b03909116815260200160405180910390f35b61007261009c366004610201565b6000602081905290815260409020546001600160a01b031681565b6100726100c5366004610201565b60006001600160a01b03821661011a5760405162461bcd60e51b8152602060048201526015602482015274696e76616c696420746f6b656e206164647265737360581b60448201526064015b60405180910390fd5b6001600160a01b0382811660009081526020819052604090205416156101825760405162461bcd60e51b815260206004820152601760248201527f65786368616e676520616c7265616479206578697374730000000000000000006044820152606401610111565b600082604051610191906101f4565b6001600160a01b039091168152602001604051809103906000f0801580156101bd573d6000803e3d6000fd5b506001600160a01b03938416600090815260208190526040902080546001600160a01b031916948216949094179093555090919050565b611d9c8061023083390190565b600060208284031215610212578081fd5b81356001600160a01b0381168114610228578182fd5b939250505056fe60806040523480156200001157600080fd5b5060405162001d9c38038062001d9c83398101604081905262000034916200028c565b6200003f8162000102565b6200004a8262000102565b81516200005f906003906020850190620001e6565b50805162000075906004906020840190620001e6565b5050506001600160a01b038116620000d35760405162461bcd60e51b815260206004820152601560248201527f696e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640160405180910390fd5b600580546001600160a01b039092166001600160a01b031992831617905560068054909116331790556200043f565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200014057600080fd5b505afa15801562000155573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200017f9190810190620002bc565b9050604051806040016040528060048152602001634554482d60e01b81525081604051806040016040528060038152602001620204c560ec1b815250604051602001620001cf9392919062000370565b604051602081830303815290604052915050919050565b828054620001f490620003ec565b90600052602060002090601f01602090048101928262000218576000855562000263565b82601f106200023357805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026357825182559160200191906001019062000246565b506200027192915062000275565b5090565b5b8082111562000271576000815560010162000276565b6000602082840312156200029e578081fd5b81516001600160a01b0381168114620002b5578182fd5b9392505050565b600060208284031215620002ce578081fd5b81516001600160401b0380821115620002e5578283fd5b818401915084601f830112620002f9578283fd5b8151818111156200030e576200030e62000429565b604051601f8201601f19908116603f0116810190838211818310171562000339576200033962000429565b8160405282815287602084870101111562000352578586fd5b62000365836020830160208801620003b9565b979650505050505050565b6000845162000384818460208901620003b9565b8451908301906200039a818360208901620003b9565b8451910190620003af818360208801620003b9565b0195945050505050565b60005b83811015620003d6578181015183820152602001620003bc565b83811115620003e6576000848401525b50505050565b600181811c908216806200040157607f821691505b602082108114156200042357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61194d806200044f6000396000f3fe6080604052600436106101405760003560e01c80638fc7a25d116100b6578063a9059cbb1161006f578063a9059cbb14610390578063c2507ac1146103b0578063dd62ed3e146103d0578063e0486c8a146103f0578063e5dedefd14610410578063f979dcd71461043057600080fd5b80638fc7a25d146102ae57806395d89b41146102ce578063966dae0e146102e35780639c8f9f231461031b5780639d76ea5814610350578063a457c2d71461037057600080fd5b8063389d9a4011610108578063389d9a40146101fb578063395093511461021057806351c6590a1461023057806359bf5d391461024357806370319f691461025857806370a082311461027857600080fd5b806306fdde0314610145578063095ea7b31461017057806318160ddd146101a057806323b872dd146101bf578063313ce567146101df575b600080fd5b34801561015157600080fd5b5061015a610443565b60405161016791906117ce565b60405180910390f35b34801561017c57600080fd5b5061019061018b3660046115e3565b6104d5565b6040519015158152602001610167565b3480156101ac57600080fd5b506002545b604051908152602001610167565b3480156101cb57600080fd5b506101906101da3660046115a3565b6104ed565b3480156101eb57600080fd5b5060405160128152602001610167565b61020e6102093660046116fc565b610511565b005b34801561021c57600080fd5b5061019061022b3660046115e3565b61051f565b6101b161023e3660046116cc565b610541565b34801561024f57600080fd5b506101b1610706565b34801561026457600080fd5b5061020e610273366004611720565b610787565b34801561028457600080fd5b506101b1610293366004611533565b6001600160a01b031660009081526020819052604090205490565b3480156102ba57600080fd5b506101b16102c93660046116cc565b610980565b3480156102da57600080fd5b5061015a6109e8565b3480156102ef57600080fd5b50600654610303906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b34801561032757600080fd5b5061033b6103363660046116cc565b6109f7565b60408051928352602083019190915201610167565b34801561035c57600080fd5b50600554610303906001600160a01b031681565b34801561037c57600080fd5b5061019061038b3660046115e3565b610b5b565b34801561039c57600080fd5b506101906103ab3660046115e3565b610bd6565b3480156103bc57600080fd5b506101b16103cb3660046116cc565b610be4565b3480156103dc57600080fd5b506101b16103eb36600461156b565b610c43565b3480156103fc57600080fd5b5061020e61040b366004611746565b610c6e565b34801561041c57600080fd5b5061015a61042b366004611533565b610d85565b61020e61043e3660046116cc565b610e63565b6060600380546104529061189b565b80601f016020809104026020016040519081016040528092919081815260200182805461047e9061189b565b80156104cb5780601f106104a0576101008083540402835291602001916104cb565b820191906000526020600020905b8154815290600101906020018083116104ae57829003601f168201915b5050505050905090565b6000336104e3818585610e70565b5060019392505050565b6000336104fb858285610f95565b610506858585611009565b506001949350505050565b61051b82826111ad565b5050565b6000336104e38185856105328383610c43565b61053c9190611801565b610e70565b600061054b610706565b6105e7576005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610583903390309087906004016117aa565b602060405180830381600087803b15801561059d57600080fd5b505af11580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d5919061160e565b50476105e133826112ae565b92915050565b60006105f33447611858565b905060006105ff610706565b905060008261060e3484611839565b6106189190611819565b9050848110156106495760405162461bcd60e51b815260206004820152600060248201526044015b60405180910390fd5b6005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061067d90339030908a906004016117aa565b602060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf919061160e565b50600083346106dd60025490565b6106e79190611839565b6106f19190611819565b90506106fd33826112ae565b95945050505050565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078291906116e4565b905090565b6006546040516303795fb160e11b81526001600160a01b03848116600483015260009216906306f2bf6290602401602060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610807919061154f565b90506001600160a01b038116301480159061082a57506001600160a01b03811615155b6108765760405162461bcd60e51b815260206004820152601860248201527f696e76616c69642065786368616e6765206164647265737300000000000000006044820152606401610640565b6000610880610706565b9050600061088f86834761136d565b6005546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906108c490339030908b906004016117aa565b602060405180830381600087803b1580156108de57600080fd5b505af11580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610916919061160e565b5060405162e2766960e61b8152600481018590523360248201526001600160a01b0384169063389d9a409083906044016000604051808303818588803b15801561095f57600080fd5b505af1158015610973573d6000803e3d6000fd5b5050505050505050505050565b60008082116109ca5760405162461bcd60e51b81526020600482015260166024820152751d1bdad95b94dbdb19081a5cc81d1bdbc81cdb585b1b60521b6044820152606401610640565b60006109d4610706565b90506109e183824761136d565b9392505050565b6060600480546104529061189b565b60008060008311610a4a5760405162461bcd60e51b815260206004820152601960248201527f63616e27742072657175657374207a65726f20616d6f756e74000000000000006044820152606401610640565b6000610a5560025490565b610a5f4786611839565b610a699190611819565b90506000610a7660025490565b610a7e610706565b610a889087611839565b610a929190611819565b9050610a9e3386611409565b604051339083156108fc029084906000818181858888f19350505050158015610acb573d6000803e3d6000fd5b5060055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610b1857600080fd5b505af1158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b50919061160e565b509094909350915050565b60003381610b698286610c43565b905083811015610bc95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610640565b6105068286868403610e70565b6000336104e3818585611009565b6000808211610c2c5760405162461bcd60e51b8152602060048201526014602482015273195d1a14dbdb19081a5cc81d1bdbc81cdb585b1b60621b6044820152606401610640565b6000610c36610706565b90506109e183478361136d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610c7983610980565b905081811015610ccb5760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610640565b6005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610cff903390309088906004016117aa565b602060405180830381600087803b158015610d1957600080fd5b505af1158015610d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d51919061160e565b50604051339082156108fc029083906000818181858888f19350505050158015610d7f573d6000803e3d6000fd5b50505050565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610dc257600080fd5b505afa158015610dd6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dfe919081019061162e565b9050604051806040016040528060048152602001634554482d60e01b81525081604051806040016040528060038152602001620204c560ec1b815250604051602001610e4c93929190611767565b604051602081830303815290604052915050919050565b610e6d81336111ad565b50565b6001600160a01b038316610ed25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610640565b6001600160a01b038216610f335760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610640565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610fa18484610c43565b90506000198114610d7f5781811015610ffc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610640565b610d7f8484848403610e70565b6001600160a01b03831661106d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610640565b6001600160a01b0382166110cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610640565b6001600160a01b038316600090815260208190526040902054818110156111475760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610640565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d7f565b60006111b7610706565b905060006111cf346111c98147611858565b8461136d565b9050838110156112215760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610640565b60055460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561126f57600080fd5b505af1158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a7919061160e565b5050505050565b6001600160a01b0382166113045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610640565b80600260008282546113169190611801565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000808311801561137e5750600082115b6113bd5760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420726573657276657360801b6044820152606401610640565b60006113ca856063611839565b905060006113d88483611839565b90506000826113e8876064611839565b6113f29190611801565b90506113fe8183611819565b979650505050505050565b6001600160a01b0382166114695760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610640565b6001600160a01b038216600090815260208190526040902054818110156114dd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610640565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f88565b600060208284031215611544578081fd5b81356109e181611902565b600060208284031215611560578081fd5b81516109e181611902565b6000806040838503121561157d578081fd5b823561158881611902565b9150602083013561159881611902565b809150509250929050565b6000806000606084860312156115b7578081fd5b83356115c281611902565b925060208401356115d281611902565b929592945050506040919091013590565b600080604083850312156115f5578182fd5b823561160081611902565b946020939093013593505050565b60006020828403121561161f578081fd5b815180151581146109e1578182fd5b60006020828403121561163f578081fd5b815167ffffffffffffffff80821115611656578283fd5b818401915084601f830112611669578283fd5b81518181111561167b5761167b6118ec565b604051601f8201601f19908116603f011681019083821181831017156116a3576116a36118ec565b816040528281528760208487010111156116bb578586fd5b6113fe83602083016020880161186f565b6000602082840312156116dd578081fd5b5035919050565b6000602082840312156116f5578081fd5b5051919050565b6000806040838503121561170e578182fd5b82359150602083013561159881611902565b600080600060608486031215611734578283fd5b8335925060208401356115d281611902565b60008060408385031215611758578182fd5b50508035926020909101359150565b6000845161177981846020890161186f565b84519083019061178d81836020890161186f565b84519101906117a081836020880161186f565b0195945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208152600082518060208401526117ed81604085016020870161186f565b601f01601f19169190910160400192915050565b60008219821115611814576118146118d6565b500190565b60008261183457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611853576118536118d6565b500290565b60008282101561186a5761186a6118d6565b500390565b60005b8381101561188a578181015183820152602001611872565b83811115610d7f5750506000910152565b600181811c908216806118af57607f821691505b602082108114156118d057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e6d57600080fdfea2646970667358221220d17842a4ad022b664c211139c95ad49bce8b05695be1cf8e4295e1fb04330e6e64736f6c63430008040033a264697066735822122061f2cd1b7a6515d5ca73196d54433257257c03fcba0d573d0356f4ec542e103764736f6c634300080400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220270dbac155d6123881dc7644f4413f6ed961e9da4c5f47b5ed15947d7d2aaa3164736f6c63430008040033",
    "sourceMap": "412:999:11:-:0;;;1609:26:3;;;-1:-1:-1;;1609:26:3;1631:4;1609:26;;;412:999:11;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001455760003560e01c806397754ae911620000bb578063c88a5e6d116200007a578063c88a5e6d14620002b9578063d06d822914620002d0578063d82555f114620002e7578063e9a79a7b14620002fe578063fa7626d4146200031557600080fd5b806397754ae914620002425780639a8325a01462000259578063af9bbe5f1462000270578063b9c071b41462000287578063ba414fa6146200029e57600080fd5b80632d6c17a311620001085780632d6c17a314620001cf5780633a76846314620001e65780633bf82db114620001fd5780636bce989b14620002145780636f597075146200022b57600080fd5b80630a9254e4146200014a578063108554f21462000156578063233240ee146200016d57806329a9e300146200018457806329ce9dde146200019b575b600080fd5b6200015462000323565b005b620001546200016736600462002ad7565b6200096b565b620001546200017e366004620029be565b62000a44565b6200015462000195366004620029fc565b62000b20565b620001b2620001ac36600462002d07565b62000bd2565b6040516001600160a01b0390911681526020015b60405180910390f35b62000154620001e036600462002d79565b62000c9b565b620001b2600080516020620087b483398151915281565b620001546200020e36600462002a39565b62000cdb565b620001546200022536600462002a39565b62000dbd565b620001546200023c366004620029be565b62000dd1565b620001546200025336600462002a7e565b62000e7b565b620001b26200026a36600462002cc8565b620010bc565b620001546200028136600462002a39565b62001161565b620001546200029836600462002d79565b6200120f565b620002a862001230565b6040519015158152602001620001c6565b62000154620002ca36600462002ad7565b62001361565b62000154620002e1366004620029fc565b62001397565b62000154620002f836600462002a39565b62001449565b620001546200030f36600462002ad7565b620014fa565b600054620002a89060ff1681565b60405162000331906200281b565b604051809103906000f0801580156200034e573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560405163792e11f560e01b81526002600482015263792e11f590602401600060405180830381600087803b158015620003a657600080fd5b505af1158015620003bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003e5919081019062002b05565b8051620003fb91600e9160209091019062002829565b50600e6000815481106200041f57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600f80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b8152600481019290925260248201526005604482015264757365723160d81b6064820152600080516020620087b48339815191529063c657c71890608401600060405180830381600087803b158015620004ae57600080fd5b505af1158015620004c3573d6000803e3d6000fd5b50505050600e600181548110620004ea57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154601080546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b81526004810192909252602482015260056044820152643ab9b2b91960d91b6064820152600080516020620087b48339815191529063c657c71890608401600060405180830381600087803b1580156200057957600080fd5b505af11580156200058e573d6000803e3d6000fd5b50505050686c6b935b8bbd400000604051620005aa9062002893565b6060808252600a908201526904d4f434b5f45524332360b41b608082015260a060208201819052600490820152634d4f434b60e01b60c0820152604081019190915260e001604051809103906000f0801580156200060c573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055604051686c6b935b8bbd40000090620006469062002893565b6060808252600a90820152690524f434b5f45524332360b41b608082015260a06020820181905260049082015263524f434b60e01b60c0820152604081019190915260e001604051809103906000f080158015620006a8573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055604051620006d790620028a1565b604051809103906000f080158015620006f4573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b03928316908117909155600b54604051630b2479c760e11b81529216600483015290631648f38e90602401602060405180830381600087803b1580156200075057600080fd5b505af115801562000765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078b9190620029dd565b600980546001600160a01b0319166001600160a01b03928316179055600d54600c54604051630b2479c760e11b81529083166004820152911690631648f38e90602401602060405180830381600087803b158015620007e957600080fd5b505af1158015620007fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008249190620029dd565b600a80546001600160a01b0319166001600160a01b03928316179055600b5460095460405163095ea7b360e01b81529183169263095ea7b3926200087a9290911690686c6b935b8bbd4000009060040162002e52565b602060405180830381600087803b1580156200089557600080fd5b505af1158015620008aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008d0919062002c14565b50600c54600a5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200091292911690686c6b935b8bbd4000009060040162002e52565b602060405180830381600087803b1580156200092d57600080fd5b505af115801562000942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000968919062002c14565b50565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d90620009a1908590859060040162002e52565b600060405180830381600087803b158015620009bc57600080fd5b505af1158015620009d1573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620087b483398151915292506306447d5691506024015b600060405180830381600087803b15801562000a2757600080fd5b505af115801562000a3c573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000a7e908490600160801b9060040162002e52565b600060405180830381600087803b15801562000a9957600080fd5b505af115801562000aae573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620087b4833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000b0457600080fd5b505af115801562000b19573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000b5a908590600160801b9060040162002e52565b600060405180830381600087803b15801562000b7557600080fd5b505af115801562000b8a573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620087b483398151915292506347e50cce915060440162000a0c565b604051638d1cc92560e01b81526000908190600080516020620087b483398151915290638d1cc9259062000c0b90879060040162002ebc565b600060405180830381600087803b15801562000c2657600080fd5b505af115801562000c3b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c65919081019062002c4c565b8360405160200162000c7992919062002e1f565b60405160208183030381529060405290508051602082016000f0949350505050565b600080516020620087b483398151915263e5d6bf0262000cbc83426200302a565b6040518263ffffffff1660e01b815260040162000ae991815260200190565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000d11908690859060040162002e52565b600060405180830381600087803b15801562000d2c57600080fd5b505af115801562000d41573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620087b483398151915292506345b5607891506044015b600060405180830381600087803b15801562000d9f57600080fd5b505af115801562000db4573d6000803e3d6000fd5b50505050505050565b62000dcc838383600062000e7b565b505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000e0b908490600160801b9060040162002e52565b600060405180830381600087803b15801562000e2657600080fd5b505af115801562000e3b573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620087b483398151915292506306447d56915060240162000ae9565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000ed19162002e01565b6000604051808303816000865af19150503d806000811462000f10576040519150601f19603f3d011682016040523d82523d6000602084013e62000f15565b606091505b5091505060008180602001905181019062000f31919062002c33565b905062000fa38462000f9c8762000f736370a0823160e01b62000f5660018d620015a0565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620015c5565b821562000a3c5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000fee919062002e01565b6000604051808303816000865af19150503d80600081146200102d576040519150601f19603f3d011682016040523d82523d6000602084013e62001032565b606091505b509150506000818060200190518101906200104e919062002c33565b90508286101562001079576200106586846200302a565b6200107190826200302a565b905062001094565b6200108583876200302a565b62001091908262002fed565b90505b620010b28162000f9c6318160ddd60e01b62000f5660018d620015a0565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620087b483398151915290638d1cc92590620010f590869060040162002ebc565b600060405180830381600087803b1580156200111057600080fd5b505af115801562001125573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200114f919081019062002c4c565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062001197908690859060040162002e52565b600060405180830381600087803b158015620011b257600080fd5b505af1158015620011c7573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620087b483398151915292506347e50cce915060440162000d84565b600080516020620087b483398151915263e5d6bf0262000cbc834262002fed565b60008054610100900460ff1615620012515750600054610100900460ff1690565b6000600080516020620087b48339815191523b156200135c57604051600090600080516020620087b4833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620012be9083906519985a5b195960d21b9060200162002e52565b60408051601f1981840301815290829052620012de929160200162002dce565b60408051601f1981840301815290829052620012fa9162002e01565b6000604051808303816000865af19150503d806000811462001339576040519150601f19603f3d011682016040523d82523d6000602084013e6200133e565b606091505b509150508080602001905181019062001358919062002c14565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062000a0c908590859060040162002e52565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d90620013d1908590600160801b9060040162002e52565b600060405180830381600087803b158015620013ec57600080fd5b505af115801562001401573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620087b483398151915292506345b56078915060440162000a0c565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051620014cf906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000dcc8162000f9c8462000f736370a0823160e01b62000f5660018a620015a0565b60405163c88a5e6d60e01b8152600080516020620087b48339815191529063c88a5e6d9062001530908590859060040162002e52565b600060405180830381600087803b1580156200154b57600080fd5b505af115801562001560573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620087b4833981519152925063ca669fa7915060240162000a0c565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b620015d18282620015d5565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200164857602002820191906000526020600020905b81548152602001906001019080831162001633575b505050505090506000836200165d8362001957565b6040516020016200167092919062002dce565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620016c491869188910162002d92565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620016ff57620016fd8762001a23565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200174091879189910162002d92565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162001787919062002e01565b600060405180830381855afa9150503d8060008114620017c4576040519150601f19603f3d011682016040523d82523d6000602084013e620017c9565b606091505b509150620017e6905081620017e088602062003008565b62002785565b604051630667f9d760e41b815290925060009150600080516020620087b48339815191529063667f9d709062001823908b90879060040162002e52565b602060405180830381600087803b1580156200183e57600080fd5b505af115801562001853573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001879919062002c33565b9050808214620018a65760405162461bcd60e51b81526004016200189d9062002ef1565b60405180910390fd5b6040516370ca10bb60e01b8152600080516020620087b4833981519152906370ca10bb90620018de908b9087908e9060040162002e6b565b600060405180830381600087803b158015620018f957600080fd5b505af11580156200190e573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200194360028b016000620028af565b896004016000905550505050505050505050565b60606000825160206200196b919062003008565b67ffffffffffffffff8111156200199257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015620019bd576020820181803683370190505b50905060005b835181101562001a1c576000848281518110620019f057634e487b7160e01b600052603260045260246000fd5b60200260200101519050808260200260200184015250808062001a139062003077565b915050620019c3565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562001a9557602002820191906000526020600020905b81548152602001906001019080831162001a80575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062001ae19250859187910162002d92565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562001b80576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162001b5091859187910162002d92565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362001b8e8362001957565b60405160200162001ba192919062002dce565b6040516020818303038152906040529050600080516020620087d483398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001c0057600080fd5b505af115801562001c15573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162001c36919062002e01565b600060405180830381855afa9150503d806000811462001c73576040519150601f19603f3d011682016040523d82523d6000602084013e62001c78565b606091505b50915062001c8f905081620017e087602062003008565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620087b4833981519152906365bc948190602401600060405180830381600087803b15801562001ce757600080fd5b505af115801562001cfc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d26919081019062002bac565b50905080516001141562002030576000600080516020620087d483398151915260001c6001600160a01b031663667f9d70898460008151811062001d7a57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b815260040162001da192919062002e52565b602060405180830381600087803b15801562001dbc57600080fd5b505af115801562001dd1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001df7919062002c33565b90508062001e67577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062001e4357634e487b7160e01b600052603260045260246000fd5b602002602001015160001c60405162001e5e92919062002e52565b60405180910390a15b80831462001e895760405162461bcd60e51b81526004016200189d9062002ef1565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162001ec192919062002d92565b604051602081830303815290604052805190602001208560008151811062001ef957634e487b7160e01b600052603260045260246000fd5b602002602001015160001c60405162001f16949392919062002e8c565b60405180910390a18160008151811062001f4057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262001f8b918a918c910162002d92565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162001ff5918a918c910162002d92565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002635565b600181511115620025e15760005b8151811015620025da576000600080516020620087d483398151915260001c6001600160a01b031663667f9d708a8585815181106200208d57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401620020b492919062002e52565b602060405180830381600087803b158015620020cf57600080fd5b505af1158015620020e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200210a919062002c33565b90508062002179577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200215557634e487b7160e01b600052603260045260246000fd5b602002602001015160001c6040516200217092919062002e52565b60405180910390a15b600080516020620087d483398151915260001c6001600160a01b03166370ca10bb8a858581518110620021bc57634e487b7160e01b600052603260045260246000fd5b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620021ea9392919062002e6b565b600060405180830381600087803b1580156200220557600080fd5b505af11580156200221a573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200223c919062002e01565b600060405180830381855afa9150503d806000811462002279576040519150601f19603f3d011682016040523d82523d6000602084013e6200227e565b606091505b5090925090506200229681620017e08b602062003008565b9550818015620022aa575061133760f01b86145b1562002521577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620022e892919062002d92565b604051602081830303815290604052805190602001208888815181106200231f57634e487b7160e01b600052603260045260246000fd5b602002602001015160001c6040516200233c949392919062002e8c565b60405180910390a18484815181106200236557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092620023b0918d918f910162002d92565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200243d92919062002d92565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620087d483398151915260001c6001600160a01b03166370ca10bb8c878781518110620024bb57634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b8152600401620024e49392919062002e6b565b600060405180830381600087803b158015620024ff57600080fd5b505af115801562002514573d6000803e3d6000fd5b50505050505050620025da565b600080516020620087d483398151915260001c6001600160a01b03166370ca10bb8c8787815181106200256457634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b81526004016200258d9392919062002e6b565b600060405180830381600087803b158015620025a857600080fd5b505af1158015620025bd573d6000803e3d6000fd5b505050505050508080620025d19062003077565b9150506200203e565b5062002635565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b60648201526084016200189d565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620026799188918a910162002d92565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620026db5760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b60448201526064016200189d565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200270c60028a016000620028af565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620027529188918a910162002d92565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200279c5784516200279f565b60205b905060005b818110156200281157620027ba81600862003008565b86620027c7838862002fed565b81518110620027e657634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916901c929092179180620028088162003077565b915050620027a4565b5090949350505050565b612abf80620030e783390190565b82805482825590600052602060002090810192821562002881579160200282015b828111156200288157825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200284a565b506200288f929150620028ca565b5090565b610bed8062005ba683390190565b612021806200679383390190565b50805460008255906000526020600020908101906200096891905b5b808211156200288f5760008155600101620028cb565b6000620028f8620028f28462002fc2565b62002f67565b90508281528383830111156200290d57600080fd5b828260208301376000602084830101529392505050565b600082601f83011262002935578081fd5b8151602062002948620028f28362002f9b565b80838252828201915082860187848660051b890101111562002968578586fd5b855b8581101562002988578151845292840192908401906001016200296a565b5090979650505050505050565b600082601f830112620029a6578081fd5b620029b783833560208501620028e1565b9392505050565b600060208284031215620029d0578081fd5b8135620029b781620030c1565b600060208284031215620029ef578081fd5b8151620029b781620030c1565b6000806040838503121562002a0f578081fd5b823562002a1c81620030c1565b9150602083013562002a2e81620030c1565b809150509250929050565b60008060006060848603121562002a4e578081fd5b833562002a5b81620030c1565b9250602084013562002a6d81620030c1565b929592945050506040919091013590565b6000806000806080858703121562002a94578081fd5b843562002aa181620030c1565b9350602085013562002ab381620030c1565b925060408501359150606085013562002acc81620030d7565b939692955090935050565b6000806040838503121562002aea578182fd5b823562002af781620030c1565b946020939093013593505050565b6000602080838503121562002b18578182fd5b825167ffffffffffffffff81111562002b2f578283fd5b8301601f8101851362002b40578283fd5b805162002b51620028f28262002f9b565b80828252848201915084840188868560051b870101111562002b71578687fd5b8694505b8385101562002ba057805162002b8b81620030c1565b83526001949094019391850191850162002b75565b50979650505050505050565b6000806040838503121562002bbf578182fd5b825167ffffffffffffffff8082111562002bd7578384fd5b62002be58683870162002924565b9350602085015191508082111562002bfb578283fd5b5062002c0a8582860162002924565b9150509250929050565b60006020828403121562002c26578081fd5b8151620029b781620030d7565b60006020828403121562002c45578081fd5b5051919050565b60006020828403121562002c5e578081fd5b815167ffffffffffffffff81111562002c75578182fd5b8201601f8101841362002c86578182fd5b805162002c97620028f28262002fc2565b81815285602083850101111562002cac578384fd5b62002cbf82602083016020860162003044565b95945050505050565b60006020828403121562002cda578081fd5b813567ffffffffffffffff81111562002cf1578182fd5b62002cff8482850162002995565b949350505050565b6000806040838503121562002d1a578182fd5b823567ffffffffffffffff8082111562002d32578384fd5b62002d408683870162002995565b9350602085013591508082111562002d56578283fd5b508301601f8101851362002d68578182fd5b62002c0a85823560208401620028e1565b60006020828403121562002d8b578081fd5b5035919050565b825160009082906020808701845b8381101562002dbe5781518552938201939082019060010162002da0565b5050948252509092019392505050565b6001600160e01b031983168152815160009062002df381600485016020870162003044565b919091016004019392505050565b6000825162002e1581846020870162003044565b9190910192915050565b6000835162002e3381846020880162003044565b83519083019062002e4981836020880162003044565b01949350505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b602081526000825180602084015262002edd81604085016020870162003044565b601f01601f19169190910160400192915050565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002f935762002f93620030ab565b604052919050565b600067ffffffffffffffff82111562002fb85762002fb8620030ab565b5060051b60200190565b600067ffffffffffffffff82111562002fdf5762002fdf620030ab565b50601f01601f191660200190565b6000821982111562003003576200300362003095565b500190565b600081600019048311821515161562003025576200302562003095565b500290565b6000828210156200303f576200303f62003095565b500390565b60005b838110156200306157818101518382015260200162003047565b8381111562003071576000848401525b50505050565b60006000198214156200308e576200308e62003095565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200096857600080fd5b80151581146200096857600080fdfe6000805460ff191660011790556b75736572206164647265737360a01b60a052600c60805260ac6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db760085534801561005957600080fd5b50612a56806100696000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639a8325a0116100b8578063c88a5e6d1161007c578063c88a5e6d146102c3578063d06d8229146102d6578063d82555f1146102e9578063e9a79a7b146102fc578063f82de7b01461030f578063fa7626d41461032257600080fd5b80639a8325a014610246578063af9bbe5f14610259578063b90a68fa1461026c578063b9c071b414610298578063ba414fa6146102ab57600080fd5b80633a7684631161010a5780633a768463146101c55780633bf82db1146101da5780636bce989b146101ed5780636f59707514610200578063792e11f51461021357806397754ae91461023357600080fd5b8063108554f214610147578063233240ee1461015c57806329a9e3001461016f57806329ce9dde146101825780632d6c17a3146101b2575b600080fd5b61015a610155366004612499565b61032f565b005b61015a61016a366004612397565b610400565b61015a61017d3660046123cf565b6104d4565b610195610190366004612607565b61057f565b6040516001600160a01b0390911681526020015b60405180910390f35b61015a6101c0366004612671565b61063f565b6101956000805160206129e183398151915281565b61015a6101e8366004612407565b61067b565b61015a6101fb366004612407565b610755565b61015a61020e366004612397565b610767565b610226610221366004612671565b61080a565b6040516101a991906127a9565b61015a610241366004612447565b6109a5565b6101956102543660046125cc565b610bc5565b61015a610267366004612407565b610c63565b600880546040805160208082018490528251808303820181529183019092528051910120909155610195565b61015a6102a6366004612671565b610d0a565b6102b3610d28565b60405190151581526020016101a9565b61015a6102d1366004612499565b610e4b565b61015a6102e43660046123cf565b610e7e565b61015a6102f7366004612407565b610f29565b61015a61030a366004612499565b610fd4565b61015a61031d366004612671565b611073565b6000546102b39060ff1681565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610362908590859060040161273f565b600060405180830381600087803b15801561037c57600080fd5b505af1158015610390573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206129e183398151915292506306447d5691506024015b600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610437908490600160801b9060040161273f565b600060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206129e1833981519152925063ca669fa791506024015b600060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d9061050b908590600160801b9060040161273f565b600060405180830381600087803b15801561052557600080fd5b505af1158015610539573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206129e183398151915292506347e50cce91506044016103ca565b604051638d1cc92560e01b815260009081906000805160206129e183398151915290638d1cc925906105b59087906004016127f6565b600060405180830381600087803b1580156105cf57600080fd5b505af11580156105e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261060b9190810190612559565b8360405160200161061d929190612710565b60405160208183030381529060405290508051602082016000f0949350505050565b6000805160206129e183398151915263e5d6bf0261065d834261292f565b6040518263ffffffff1660e01b815260040161049f91815260200190565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d906106ae908690859060040161273f565b600060405180830381600087803b1580156106c857600080fd5b505af11580156106dc573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206129e183398151915292506345b5607891506044015b600060405180830381600087803b15801561073857600080fd5b505af115801561074c573d6000803e3d6000fd5b50505050505050565b61076283838360006109a5565b505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d9061079e908490600160801b9060040161273f565b600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206129e183398151915292506306447d56915060240161049f565b606060008267ffffffffffffffff81111561083557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561085e578160200160208202803683370190505b50905060005b8381101561099e576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108a957600080fd5b505af11580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e191906123b3565b60405163c88a5e6d60e01b81529091506000805160206129e18339815191529063c88a5e6d9061092090849068056bc75e2d631000009060040161273f565b600060405180830381600087803b15801561093a57600080fd5b505af115801561094e573d6000803e3d6000fd5b505050508083838151811061097357634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152508061099681612976565b915050610864565b5092915050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916109f9916126f4565b6000604051808303816000865af19150503d8060008114610a36576040519150601f19603f3d011682016040523d82523d6000602084013e610a3b565b606091505b50915050600081806020019051810190610a559190612541565b9050610ac184610abb87610a926370a0823160e01b610a7560018d6110b4565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b906110d9565b82156103f85760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691610b0991906126f4565b6000604051808303816000865af19150503d8060008114610b46576040519150601f19603f3d011682016040523d82523d6000602084013e610b4b565b606091505b50915050600081806020019051810190610b659190612541565b905082861015610b8a57610b79868461292f565b610b83908261292f565b9050610ba1565b610b94838761292f565b610b9e90826128f8565b90505b610bbb81610abb6318160ddd60e01b610a7560018d6110b4565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206129e183398151915290638d1cc92590610bfb9086906004016127f6565b600060405180830381600087803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c519190810190612559565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610c96908690859060040161273f565b600060405180830381600087803b158015610cb057600080fd5b505af1158015610cc4573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206129e183398151915292506347e50cce915060440161071e565b6000805160206129e183398151915263e5d6bf0261065d83426128f8565b60008054610100900460ff1615610d485750600054610100900460ff1690565b60006000805160206129e18339815191523b15610e46576040516000906000805160206129e1833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490610db09083906519985a5b195960d21b9060200161273f565b60408051601f1981840301815290829052610dce92916020016126c3565b60408051601f1981840301815290829052610de8916126f4565b6000604051808303816000865af19150503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b5091505080806020019051810190610e429190612525565b9150505b919050565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d906103ca908590859060040161273f565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90610eb5908590600160801b9060040161273f565b600060405180830381600087803b158015610ecf57600080fd5b505af1158015610ee3573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206129e183398151915292506345b5607891506044016103ca565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051610fae906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a161076281610abb84610a926370a0823160e01b610a7560018a6110b4565b60405163c88a5e6d60e01b81526000805160206129e18339815191529063c88a5e6d90611007908590859060040161273f565b600060405180830381600087803b15801561102157600080fd5b505af1158015611035573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03851660048201526000805160206129e1833981519152925063ca669fa791506024016103ca565b600061107f82436128f8565b6040516301f7b4f360e41b8152600481018290529091506000805160206129e183398151915290631f7b4f30906024016103ca565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b6110e382826110e7565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561115857602002820191906000526020600020905b815481526020019060010190808311611144575b5050505050905060008361116b83611443565b60405160200161117c9291906126c3565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916111ce918691889101612689565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1661120657611204876114ff565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391611245918791899101612689565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405161128a91906126f4565b600060405180830381855afa9150503d80600081146112c5576040519150601f19603f3d011682016040523d82523d6000602084013e6112ca565b606091505b5091506112e39050816112de886020612910565b6121eb565b604051630667f9d760e41b8152909250600091506000805160206129e18339815191529063667f9d709061131d908b90879060040161273f565b602060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190612541565b90508082146113995760405162461bcd60e51b815260040161139090612829565b60405180910390fd5b6040516370ca10bb60e01b81526000805160206129e1833981519152906370ca10bb906113ce908b9087908e90600401612758565b600060405180830381600087803b1580156113e857600080fd5b505af11580156113fc573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561142f60028b016000612276565b896004016000905550505050505050505050565b60606000825160206114559190612910565b67ffffffffffffffff81111561147b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156114a5576020820181803683370190505b50905060005b835181101561099e5760008482815181106114d657634e487b7160e01b600052603260045260246000fd5b6020026020010151905080826020026020018401525080806114f790612976565b9150506114ab565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561156f57602002820191906000526020600020905b81548152602001906001019080831161155b575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506115b992508591879101612689565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615611655576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291611625918591879101612689565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361166183611443565b6040516020016116729291906126c3565b6040516020818303038152906040529050600080516020612a0183398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156116cf57600080fd5b505af11580156116e3573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405161170291906126f4565b600060405180830381855afa9150503d806000811461173d576040519150601f19603f3d011682016040523d82523d6000602084013e611742565b606091505b5091506117569050816112de876020612910565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206129e1833981519152906365bc948190602401600060405180830381600087803b1580156117ac57600080fd5b505af11580156117c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117e891908101906124c4565b509050805160011415611ad7576000600080516020612a0183398151915260001c6001600160a01b031663667f9d70898460008151811061183957634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b815260040161185e92919061273f565b602060405180830381600087803b15801561187857600080fd5b505af115801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b09190612541565b90508061191c577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106118fa57634e487b7160e01b600052603260045260246000fd5b602002602001015160001c60405161191392919061273f565b60405180910390a15b80831461193b5760405162461bcd60e51b815260040161139090612829565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001611971929190612689565b60405160208183030381529060405280519060200120856000815181106119a857634e487b7160e01b600052603260045260246000fd5b602002602001015160001c6040516119c39493929190612779565b60405180910390a1816000815181106119ec57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611a35918a918c9101612689565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391611a9d918a918c9101612689565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506120a3565b6001815111156120505760005b815181101561204a576000600080516020612a0183398151915260001c6001600160a01b031663667f9d708a858581518110611b3057634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401611b5592919061273f565b602060405180830381600087803b158015611b6f57600080fd5b505af1158015611b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba79190612541565b905080611c12577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611bf057634e487b7160e01b600052603260045260246000fd5b602002602001015160001c604051611c0992919061273f565b60405180910390a15b600080516020612a0183398151915260001c6001600160a01b03166370ca10bb8a858581518110611c5357634e487b7160e01b600052603260045260246000fd5b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401611c7f93929190612758565b600060405180830381600087803b158015611c9957600080fd5b505af1158015611cad573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051611ccd91906126f4565b600060405180830381855afa9150503d8060008114611d08576040519150601f19603f3d011682016040523d82523d6000602084013e611d0d565b606091505b509092509050611d22816112de8b6020612910565b9550818015611d35575061133760f01b86145b15611f9a577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001611d70929190612689565b60405160208183030381529060405280519060200120888881518110611da657634e487b7160e01b600052603260045260246000fd5b602002602001015160001c604051611dc19493929190612779565b60405180910390a1848481518110611de957634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611e32918d918f9101612689565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001611ebd929190612689565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020612a0183398151915260001c6001600160a01b03166370ca10bb8c878781518110611f3957634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b8152600401611f6093929190612758565b600060405180830381600087803b158015611f7a57600080fd5b505af1158015611f8e573d6000803e3d6000fd5b5050505050505061204a565b600080516020612a0183398151915260001c6001600160a01b03166370ca10bb8c878781518110611fdb57634e487b7160e01b600052603260045260246000fd5b6020026020010151866040518463ffffffff1660e01b815260040161200293929190612758565b600060405180830381600087803b15801561201c57600080fd5b505af1158015612030573d6000803e3d6000fd5b50505050505050808061204290612976565b915050611ae4565b506120a3565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b6064820152608401611390565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916120e59188918a9101612689565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166121455760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b6044820152606401611390565b6005890180546001600160a01b031916905560038901805463ffffffff1916905561217460028a016000612276565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916121b89188918a9101612689565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111612200578451612203565b60205b905060005b8181101561226c5761221b816008612910565b8661222683886128f8565b8151811061224457634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916901c92909217918061226481612976565b915050612208565b5090949350505050565b50805460008255906000526020600020908101906122949190612297565b50565b5b808211156122ac5760008155600101612298565b5090565b60006122c36122be846128d0565b61289f565b90508281528383830111156122d757600080fd5b828260208301376000602084830101529392505050565b600082601f8301126122fe578081fd5b8151602067ffffffffffffffff82111561231a5761231a6129a7565b8160051b61232982820161289f565b838152828101908684018388018501891015612343578687fd5b8693505b85841015612365578051835260019390930192918401918401612347565b50979650505050505050565b600082601f830112612381578081fd5b612390838335602085016122b0565b9392505050565b6000602082840312156123a8578081fd5b8135612390816129bd565b6000602082840312156123c4578081fd5b8151612390816129bd565b600080604083850312156123e1578081fd5b82356123ec816129bd565b915060208301356123fc816129bd565b809150509250929050565b60008060006060848603121561241b578081fd5b8335612426816129bd565b92506020840135612436816129bd565b929592945050506040919091013590565b6000806000806080858703121561245c578081fd5b8435612467816129bd565b93506020850135612477816129bd565b925060408501359150606085013561248e816129d2565b939692955090935050565b600080604083850312156124ab578182fd5b82356124b6816129bd565b946020939093013593505050565b600080604083850312156124d6578182fd5b825167ffffffffffffffff808211156124ed578384fd5b6124f9868387016122ee565b9350602085015191508082111561250e578283fd5b5061251b858286016122ee565b9150509250929050565b600060208284031215612536578081fd5b8151612390816129d2565b600060208284031215612552578081fd5b5051919050565b60006020828403121561256a578081fd5b815167ffffffffffffffff811115612580578182fd5b8201601f81018413612590578182fd5b805161259e6122be826128d0565b8181528560208385010111156125b2578384fd5b6125c3826020830160208601612946565b95945050505050565b6000602082840312156125dd578081fd5b813567ffffffffffffffff8111156125f3578182fd5b6125ff84828501612371565b949350505050565b60008060408385031215612619578182fd5b823567ffffffffffffffff80821115612630578384fd5b61263c86838701612371565b93506020850135915080821115612651578283fd5b508301601f81018513612662578182fd5b61251b858235602084016122b0565b600060208284031215612682578081fd5b5035919050565b825160009082906020808701845b838110156126b357815185529382019390820190600101612697565b5050948252509092019392505050565b6001600160e01b03198316815281516000906126e6816004850160208701612946565b919091016004019392505050565b60008251612706818460208701612946565b9190910192915050565b60008351612722818460208801612946565b835190830190612736818360208801612946565b01949350505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b6020808252825182820181905260009190848201906040850190845b818110156127ea5783516001600160a01b0316835292840192918401916001016127c5565b50909695505050505050565b6020815260008251806020840152612815816040850160208701612946565b601f01601f19169190910160400192915050565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b604051601f8201601f1916810167ffffffffffffffff811182821017156128c8576128c86129a7565b604052919050565b600067ffffffffffffffff8211156128ea576128ea6129a7565b50601f01601f191660200190565b6000821982111561290b5761290b612991565b500190565b600081600019048311821515161561292a5761292a612991565b500290565b60008282101561294157612941612991565b500390565b60005b83811015612961578181015183820152602001612949565b83811115612970576000848401525b50505050565b600060001982141561298a5761298a612991565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461229457600080fd5b801515811461229457600080fdfe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220a3d80cba2e373b69bdb84406e2885e031302649a8eebc9c8318d3fff2b1629c864736f6c6343000804003360806040523480156200001157600080fd5b5060405162000bed38038062000bed8339810160408190526200003491620002a0565b8251839083906200004d90600390602085019062000147565b5080516200006390600490602084019062000147565b5050506200007833826200008160201b60201c565b50505062000388565b6001600160a01b038216620000dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f0919062000310565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001559062000335565b90600052602060002090601f016020900481019282620001795760008555620001c4565b82601f106200019457805160ff1916838001178555620001c4565b82800160010185558215620001c4579182015b82811115620001c4578251825591602001919060010190620001a7565b50620001d2929150620001d6565b5090565b5b80821115620001d25760008155600101620001d7565b600082601f830112620001fe578081fd5b81516001600160401b03808211156200021b576200021b62000372565b604051601f8301601f19908116603f0116810190828211818310171562000246576200024662000372565b8160405283815260209250868385880101111562000262578485fd5b8491505b8382101562000285578582018301518183018401529082019062000266565b838211156200029657848385830101525b9695505050505050565b600080600060608486031215620002b5578283fd5b83516001600160401b0380821115620002cc578485fd5b620002da87838801620001ed565b94506020860151915080821115620002f0578384fd5b50620002ff86828701620001ed565b925050604084015190509250925092565b600082198211156200033057634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200034a57607f821691505b602082108114156200036c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61085580620003986000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061076d565b60405180910390f35b6100df6100da366004610744565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610709565b61024a565b604051601281526020016100c3565b6100df610131366004610744565b61026e565b6100f36101443660046106b6565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610744565b61029f565b6100df610188366004610744565b61031f565b6100f361019b3660046106d7565b61032d565b6060600380546101af906107e4565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107e4565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107c0565b610358565b6060600480546101af906107e4565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b80356001600160a01b03811681146106b157600080fd5b919050565b6000602082840312156106c7578081fd5b6106d08261069a565b9392505050565b600080604083850312156106e9578081fd5b6106f28361069a565b91506107006020840161069a565b90509250929050565b60008060006060848603121561071d578081fd5b6107268461069a565b92506107346020850161069a565b9150604084013590509250925092565b60008060408385031215610756578182fd5b61075f8361069a565b946020939093013593505050565b6000602080835283518082850152825b818110156107995785810183015185820160400152820161077d565b818111156107aa5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156107df57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806107f857607f821691505b6020821081141561081957634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207b4b307dc52dd4093bd94993f54fab136cfdf36d105b10a83f903b0f470ed01864736f6c63430008040033608060405234801561001057600080fd5b50612001806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306f2bf62146100465780630dd94b961461008e5780631648f38e146100b7575b600080fd5b610072610054366004610201565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b03909116815260200160405180910390f35b61007261009c366004610201565b6000602081905290815260409020546001600160a01b031681565b6100726100c5366004610201565b60006001600160a01b03821661011a5760405162461bcd60e51b8152602060048201526015602482015274696e76616c696420746f6b656e206164647265737360581b60448201526064015b60405180910390fd5b6001600160a01b0382811660009081526020819052604090205416156101825760405162461bcd60e51b815260206004820152601760248201527f65786368616e676520616c7265616479206578697374730000000000000000006044820152606401610111565b600082604051610191906101f4565b6001600160a01b039091168152602001604051809103906000f0801580156101bd573d6000803e3d6000fd5b506001600160a01b03938416600090815260208190526040902080546001600160a01b031916948216949094179093555090919050565b611d9c8061023083390190565b600060208284031215610212578081fd5b81356001600160a01b0381168114610228578182fd5b939250505056fe60806040523480156200001157600080fd5b5060405162001d9c38038062001d9c83398101604081905262000034916200028c565b6200003f8162000102565b6200004a8262000102565b81516200005f906003906020850190620001e6565b50805162000075906004906020840190620001e6565b5050506001600160a01b038116620000d35760405162461bcd60e51b815260206004820152601560248201527f696e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640160405180910390fd5b600580546001600160a01b039092166001600160a01b031992831617905560068054909116331790556200043f565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200014057600080fd5b505afa15801562000155573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200017f9190810190620002bc565b9050604051806040016040528060048152602001634554482d60e01b81525081604051806040016040528060038152602001620204c560ec1b815250604051602001620001cf9392919062000370565b604051602081830303815290604052915050919050565b828054620001f490620003ec565b90600052602060002090601f01602090048101928262000218576000855562000263565b82601f106200023357805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026357825182559160200191906001019062000246565b506200027192915062000275565b5090565b5b8082111562000271576000815560010162000276565b6000602082840312156200029e578081fd5b81516001600160a01b0381168114620002b5578182fd5b9392505050565b600060208284031215620002ce578081fd5b81516001600160401b0380821115620002e5578283fd5b818401915084601f830112620002f9578283fd5b8151818111156200030e576200030e62000429565b604051601f8201601f19908116603f0116810190838211818310171562000339576200033962000429565b8160405282815287602084870101111562000352578586fd5b62000365836020830160208801620003b9565b979650505050505050565b6000845162000384818460208901620003b9565b8451908301906200039a818360208901620003b9565b8451910190620003af818360208801620003b9565b0195945050505050565b60005b83811015620003d6578181015183820152602001620003bc565b83811115620003e6576000848401525b50505050565b600181811c908216806200040157607f821691505b602082108114156200042357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61194d806200044f6000396000f3fe6080604052600436106101405760003560e01c80638fc7a25d116100b6578063a9059cbb1161006f578063a9059cbb14610390578063c2507ac1146103b0578063dd62ed3e146103d0578063e0486c8a146103f0578063e5dedefd14610410578063f979dcd71461043057600080fd5b80638fc7a25d146102ae57806395d89b41146102ce578063966dae0e146102e35780639c8f9f231461031b5780639d76ea5814610350578063a457c2d71461037057600080fd5b8063389d9a4011610108578063389d9a40146101fb578063395093511461021057806351c6590a1461023057806359bf5d391461024357806370319f691461025857806370a082311461027857600080fd5b806306fdde0314610145578063095ea7b31461017057806318160ddd146101a057806323b872dd146101bf578063313ce567146101df575b600080fd5b34801561015157600080fd5b5061015a610443565b60405161016791906117ce565b60405180910390f35b34801561017c57600080fd5b5061019061018b3660046115e3565b6104d5565b6040519015158152602001610167565b3480156101ac57600080fd5b506002545b604051908152602001610167565b3480156101cb57600080fd5b506101906101da3660046115a3565b6104ed565b3480156101eb57600080fd5b5060405160128152602001610167565b61020e6102093660046116fc565b610511565b005b34801561021c57600080fd5b5061019061022b3660046115e3565b61051f565b6101b161023e3660046116cc565b610541565b34801561024f57600080fd5b506101b1610706565b34801561026457600080fd5b5061020e610273366004611720565b610787565b34801561028457600080fd5b506101b1610293366004611533565b6001600160a01b031660009081526020819052604090205490565b3480156102ba57600080fd5b506101b16102c93660046116cc565b610980565b3480156102da57600080fd5b5061015a6109e8565b3480156102ef57600080fd5b50600654610303906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b34801561032757600080fd5b5061033b6103363660046116cc565b6109f7565b60408051928352602083019190915201610167565b34801561035c57600080fd5b50600554610303906001600160a01b031681565b34801561037c57600080fd5b5061019061038b3660046115e3565b610b5b565b34801561039c57600080fd5b506101906103ab3660046115e3565b610bd6565b3480156103bc57600080fd5b506101b16103cb3660046116cc565b610be4565b3480156103dc57600080fd5b506101b16103eb36600461156b565b610c43565b3480156103fc57600080fd5b5061020e61040b366004611746565b610c6e565b34801561041c57600080fd5b5061015a61042b366004611533565b610d85565b61020e61043e3660046116cc565b610e63565b6060600380546104529061189b565b80601f016020809104026020016040519081016040528092919081815260200182805461047e9061189b565b80156104cb5780601f106104a0576101008083540402835291602001916104cb565b820191906000526020600020905b8154815290600101906020018083116104ae57829003601f168201915b5050505050905090565b6000336104e3818585610e70565b5060019392505050565b6000336104fb858285610f95565b610506858585611009565b506001949350505050565b61051b82826111ad565b5050565b6000336104e38185856105328383610c43565b61053c9190611801565b610e70565b600061054b610706565b6105e7576005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610583903390309087906004016117aa565b602060405180830381600087803b15801561059d57600080fd5b505af11580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d5919061160e565b50476105e133826112ae565b92915050565b60006105f33447611858565b905060006105ff610706565b905060008261060e3484611839565b6106189190611819565b9050848110156106495760405162461bcd60e51b815260206004820152600060248201526044015b60405180910390fd5b6005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061067d90339030908a906004016117aa565b602060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf919061160e565b50600083346106dd60025490565b6106e79190611839565b6106f19190611819565b90506106fd33826112ae565b95945050505050565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078291906116e4565b905090565b6006546040516303795fb160e11b81526001600160a01b03848116600483015260009216906306f2bf6290602401602060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610807919061154f565b90506001600160a01b038116301480159061082a57506001600160a01b03811615155b6108765760405162461bcd60e51b815260206004820152601860248201527f696e76616c69642065786368616e6765206164647265737300000000000000006044820152606401610640565b6000610880610706565b9050600061088f86834761136d565b6005546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906108c490339030908b906004016117aa565b602060405180830381600087803b1580156108de57600080fd5b505af11580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610916919061160e565b5060405162e2766960e61b8152600481018590523360248201526001600160a01b0384169063389d9a409083906044016000604051808303818588803b15801561095f57600080fd5b505af1158015610973573d6000803e3d6000fd5b5050505050505050505050565b60008082116109ca5760405162461bcd60e51b81526020600482015260166024820152751d1bdad95b94dbdb19081a5cc81d1bdbc81cdb585b1b60521b6044820152606401610640565b60006109d4610706565b90506109e183824761136d565b9392505050565b6060600480546104529061189b565b60008060008311610a4a5760405162461bcd60e51b815260206004820152601960248201527f63616e27742072657175657374207a65726f20616d6f756e74000000000000006044820152606401610640565b6000610a5560025490565b610a5f4786611839565b610a699190611819565b90506000610a7660025490565b610a7e610706565b610a889087611839565b610a929190611819565b9050610a9e3386611409565b604051339083156108fc029084906000818181858888f19350505050158015610acb573d6000803e3d6000fd5b5060055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610b1857600080fd5b505af1158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b50919061160e565b509094909350915050565b60003381610b698286610c43565b905083811015610bc95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610640565b6105068286868403610e70565b6000336104e3818585611009565b6000808211610c2c5760405162461bcd60e51b8152602060048201526014602482015273195d1a14dbdb19081a5cc81d1bdbc81cdb585b1b60621b6044820152606401610640565b6000610c36610706565b90506109e183478361136d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610c7983610980565b905081811015610ccb5760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610640565b6005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610cff903390309088906004016117aa565b602060405180830381600087803b158015610d1957600080fd5b505af1158015610d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d51919061160e565b50604051339082156108fc029083906000818181858888f19350505050158015610d7f573d6000803e3d6000fd5b50505050565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610dc257600080fd5b505afa158015610dd6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dfe919081019061162e565b9050604051806040016040528060048152602001634554482d60e01b81525081604051806040016040528060038152602001620204c560ec1b815250604051602001610e4c93929190611767565b604051602081830303815290604052915050919050565b610e6d81336111ad565b50565b6001600160a01b038316610ed25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610640565b6001600160a01b038216610f335760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610640565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610fa18484610c43565b90506000198114610d7f5781811015610ffc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610640565b610d7f8484848403610e70565b6001600160a01b03831661106d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610640565b6001600160a01b0382166110cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610640565b6001600160a01b038316600090815260208190526040902054818110156111475760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610640565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d7f565b60006111b7610706565b905060006111cf346111c98147611858565b8461136d565b9050838110156112215760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610640565b60055460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561126f57600080fd5b505af1158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a7919061160e565b5050505050565b6001600160a01b0382166113045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610640565b80600260008282546113169190611801565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000808311801561137e5750600082115b6113bd5760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420726573657276657360801b6044820152606401610640565b60006113ca856063611839565b905060006113d88483611839565b90506000826113e8876064611839565b6113f29190611801565b90506113fe8183611819565b979650505050505050565b6001600160a01b0382166114695760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610640565b6001600160a01b038216600090815260208190526040902054818110156114dd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610640565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f88565b600060208284031215611544578081fd5b81356109e181611902565b600060208284031215611560578081fd5b81516109e181611902565b6000806040838503121561157d578081fd5b823561158881611902565b9150602083013561159881611902565b809150509250929050565b6000806000606084860312156115b7578081fd5b83356115c281611902565b925060208401356115d281611902565b929592945050506040919091013590565b600080604083850312156115f5578182fd5b823561160081611902565b946020939093013593505050565b60006020828403121561161f578081fd5b815180151581146109e1578182fd5b60006020828403121561163f578081fd5b815167ffffffffffffffff80821115611656578283fd5b818401915084601f830112611669578283fd5b81518181111561167b5761167b6118ec565b604051601f8201601f19908116603f011681019083821181831017156116a3576116a36118ec565b816040528281528760208487010111156116bb578586fd5b6113fe83602083016020880161186f565b6000602082840312156116dd578081fd5b5035919050565b6000602082840312156116f5578081fd5b5051919050565b6000806040838503121561170e578182fd5b82359150602083013561159881611902565b600080600060608486031215611734578283fd5b8335925060208401356115d281611902565b60008060408385031215611758578182fd5b50508035926020909101359150565b6000845161177981846020890161186f565b84519083019061178d81836020890161186f565b84519101906117a081836020880161186f565b0195945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208152600082518060208401526117ed81604085016020870161186f565b601f01601f19169190910160400192915050565b60008219821115611814576118146118d6565b500190565b60008261183457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611853576118536118d6565b500290565b60008282101561186a5761186a6118d6565b500390565b60005b8381101561188a578181015183820152602001611872565b83811115610d7f5750506000910152565b600181811c908216806118af57607f821691505b602082108114156118d057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e6d57600080fdfea2646970667358221220d17842a4ad022b664c211139c95ad49bce8b05695be1cf8e4295e1fb04330e6e64736f6c63430008040033a264697066735822122061f2cd1b7a6515d5ca73196d54433257257c03fcba0d573d0356f4ec542e103764736f6c634300080400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220270dbac155d6123881dc7644f4413f6ed961e9da4c5f47b5ed15947d7d2aaa3164736f6c63430008040033",
    "sourceMap": "412:999:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;758:648;;;:::i;:::-;;1403:119:4;;;;;;:::i;:::-;;:::i;724:99::-;;;;;;:::i;:::-;;:::i;948:123::-;;;;;;:::i;:::-;;:::i;3811:295::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;9814:32:13;;;9796:51;;9784:2;9769:18;3811:295:4;;;;;;;;571:87;;;;;;:::i;:::-;;:::i;323:40::-;;-1:-1:-1;;;;;;;;;;;323:40:4;;1786:143;;;;;;:::i;:::-;;:::i;2588:109::-;;;;;;:::i;:::-;;:::i;1286:::-;;;;;;:::i;:::-;;:::i;2705:941::-;;;;;;:::i;:::-;;:::i;4114:252::-;;;;;;:::i;:::-;;:::i;1079:133::-;;;;;;:::i;:::-;;:::i;478:85::-;;;;;;:::i;:::-;;:::i;1865:600:3:-;;;:::i;:::-;;;13182:14:13;;13175:22;13157:41;;13145:2;13130:18;1865:600:3;13112:92:13;2377:83:4;;;;;;:::i;:::-;;:::i;1645:133::-;;;;;;:::i;:::-;;:::i;1976:304::-;;;;;;:::i;:::-;;:::i;831:109::-;;;;;;:::i;:::-;;:::i;1609:26:3:-;;;;;;;;;758:648:11;808:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;800:5:11;:19;;-1:-1:-1;;;;;;800:19:11;-1:-1:-1;;;;;800:19:11;;;;;;;;;837:20;;-1:-1:-1;;;837:20:11;;855:1;837:20;;;13582:25:13;837:17:11;;13555:18:13;;837:20:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;837:20:11;;;;;;;;;;;;:::i;:::-;829:28;;;;:5;;:28;;;;;;:::i;:::-;;875:5;881:1;875:8;;;;;;-1:-1:-1;;;875:8:11;;;;;;;;;;;;;;;;;;;867:5;:16;;-1:-1:-1;;;;;;867:16:11;-1:-1:-1;;;;;875:8:11;;;867:16;;;;;893:24;;;-1:-1:-1;;;893:24:11;;;;;12519:51:13;;;;12586:18;;;12579:30;12645:1;12625:18;;;12618:29;-1:-1:-1;;;12663:18:13;;;12656:35;-1:-1:-1;;;;;;;;;;;1712:64:3;893:8:11;;12708:19:13;;893:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:5;941:1;935:8;;;;;;-1:-1:-1;;;935:8:11;;;;;;;;;;;;;;;;;;;927:5;:16;;-1:-1:-1;;;;;;927:16:11;-1:-1:-1;;;;;935:8:11;;;927:16;;;;;953:24;;;-1:-1:-1;;;953:24:11;;;;;12088:51:13;;;;12155:18;;;12148:30;12214:1;12194:18;;;12187:29;-1:-1:-1;;;12232:18:13;;;12225:35;-1:-1:-1;;;;;;;;;;;1712:64:3;953:8:11;;12277:19:13;;953:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1033:7;997:44;;;;;:::i;:::-;15258:2:13;15240:21;;;15297:2;15277:18;;;15270:30;-1:-1:-1;;;15331:3:13;15316:19;;15309:41;15388:3;15381:4;15366:20;;15359:33;;;15429:1;15408:19;;;15401:30;-1:-1:-1;;;15462:3:13;15447:19;;15440:35;-1:-1:-1;15527:18:13;;15520:34;;;;15507:3;15492:19;997:44:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;989:5:11;:52;;-1:-1:-1;;;;;;989:52:11;-1:-1:-1;;;;;989:52:11;;;;;;;;;;1060:44;;1096:7;;1060:44;;;:::i;:::-;16689:2:13;16671:21;;;16728:2;16708:18;;;16701:30;-1:-1:-1;;;16762:3:13;16747:19;;16740:41;16819:3;16812:4;16797:20;;16790:33;;;16860:1;16839:19;;;16832:30;-1:-1:-1;;;16893:3:13;16878:19;;16871:35;-1:-1:-1;16958:18:13;;16951:34;;;;16938:3;16923:19;1060:44:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1051:6:11;:53;;-1:-1:-1;;;;;;1051:53:11;-1:-1:-1;;;;;1051:53:11;;;;;;;;;;1133:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1123:7:11;:23;;-1:-1:-1;;;;;;1123:23:11;-1:-1:-1;;;;;1123:23:11;;;;;;;;;1207:5;;1176:38;;-1:-1:-1;;;1176:38:11;;1207:5;;1176:38;;;9796:51:13;1123:23:11;1176:22;;9769:18:13;;1176:38:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1156:8;:59;;-1:-1:-1;;;;;;1156:59:11;-1:-1:-1;;;;;1156:59:11;;;;;;1246:7;;1277:6;;1246:39;;-1:-1:-1;;;1246:39:11;;1277:6;;;1246:39;;;9796:51:13;1246:7:11;;;:22;;9769:18:13;;1246:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1225:9;:61;;-1:-1:-1;;;;;;1225:61:11;-1:-1:-1;;;;;1225:61:11;;;;;;1305:5;;1327:8;;1305:41;;-1:-1:-1;;;1305:41:11;;:5;;;;:13;;:41;;1327:8;;;;1338:7;;1305:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1356:6:11;;1379:9;;1356:43;;-1:-1:-1;;;1356:43:11;;-1:-1:-1;;;;;1356:6:11;;;;:14;;:43;;1379:9;;;1391:7;;1356:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;758:648::o;1403:119:4:-;1467:18;;-1:-1:-1;;;1467:18:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;1467:7:4;;:18;;1475:3;;1480:4;;1467:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1496:18:4;;-1:-1:-1;;;1496:18:4;;-1:-1:-1;;;;;9814:32:13;;1496:18:4;;;9796:51:13;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;1496:13:4;;-1:-1:-1;9769:18:13;;1496::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:119;;:::o;724:99::-;769:22;;-1:-1:-1;;;769:22:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;769:7:4;;:22;;777:3;;-1:-1:-1;;;782:8:4;769:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;802:13:4;;-1:-1:-1;;;802:13:4;;-1:-1:-1;;;;;9814:32:13;;802:13:4;;;9796:51:13;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;802:8:4;;-1:-1:-1;9769:18:13;;802:13:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:99;:::o;948:123::-;1009:22;;-1:-1:-1;;;1009:22:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;1009:7:4;;:22;;1017:3;;-1:-1:-1;;;1022:8:4;1009:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1042:21:4;;-1:-1:-1;;;1042:21:4;;-1:-1:-1;;;;;10088:15:13;;;1042:21:4;;;10070:34:13;10140:15;;10120:18;;;10113:43;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;1042:8:4;;-1:-1:-1;10005:18:13;;1042:21:4;9987:175:13;3811:295:4;3975:16;;-1:-1:-1;;;3975:16:4;;3904:12;;;;-1:-1:-1;;;;;;;;;;;1712:64:3;3975:10:4;;:16;;3986:4;;3975:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3975:16:4;;;;;;;;;;;;:::i;:::-;3993:4;3958:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3934:64;;4078:8;4072:15;4065:4;4055:8;4051:19;4048:1;4041:47;4033:55;4018:81;-1:-1:-1;;;;4018:81:4:o;571:87::-;-1:-1:-1;;;;;;;;;;;619:7:4;627:22;645:4;627:15;:22;:::i;:::-;619:31;;;;;;;;;;;;;13582:25:13;;13570:2;13555:18;;13537:76;1786:143:4;1866:18;;-1:-1:-1;;;1866:18:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;1866:7:4;;:18;;1874:3;;1879:4;;1866:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1895:26:4;;-1:-1:-1;;;1895:26:4;;-1:-1:-1;;;;;10088:15:13;;;1895:26:4;;;10070:34:13;10140:15;;10120:18;;;10113:43;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;1895:13:4;;-1:-1:-1;10005:18:13;;1895:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:143;;;:::o;2588:109::-;2661:28;2666:5;2673:2;2677:4;2683:5;2661:4;:28::i;:::-;2588:109;;;:::o;1286:::-;1336:22;;-1:-1:-1;;;1336:22:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;1336:7:4;;:22;;1344:3;;-1:-1:-1;;;1349:8:4;1336:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1369:18:4;;-1:-1:-1;;;1369:18:4;;-1:-1:-1;;;;;9814:32:13;;1369:18:4;;;9796:51:13;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;1369:13:4;;-1:-1:-1;9769:18:13;;1369::4;9751:102:13;2705:941:4;2861:38;;;-1:-1:-1;;;;;9814:32:13;;;2861:38:4;;;;9796:51:13;;;;2861:38:4;;;;;;;;;;9769:18:13;;;;2861:38:4;;;;;;;-1:-1:-1;;;;;2861:38:4;-1:-1:-1;;;2861:38:4;;;2850:50;;2826:20;;2850:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:77;;;2911:15;2940:7;2929:30;;;;;;;;;;;;:::i;:::-;2911:48;-1:-1:-1;2999:127:4;3121:4;2999:93;3089:2;2999:66;-1:-1:-1;;;2999:36:4;:8;3029:5;2999:29;:36::i;:::-;:54;10123:9;;;:16;;-1:-1:-1;;10123:16:4;;;;;;;;;;;;:9;10023:146;2999:66;:89;10449:10;;;:47;;;;;;;-1:-1:-1;10449:47:4;;;;;;;-1:-1:-1;;;;;10473:21:4;;;;10449:47;;;:10;10344:182;2999:93;:121;;:127::i;:::-;3174:6;3171:468;;;3237:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3237:34:4;-1:-1:-1;;;3237:34:4;;;3226:46;;3199:23;;-1:-1:-1;;;;;3226:10:4;;;:46;;3237:34;3226:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:76;;;3287:14;3315:10;3304:33;;;;;;;;;;;;:::i;:::-;3287:50;;3362:7;3355:4;:14;3352:147;;;3401:14;3411:4;3401:7;:14;:::i;:::-;3390:26;;;;:::i;:::-;;;3352:147;;;3468:14;3475:7;3468:4;:14;:::i;:::-;3457:26;;;;:::i;:::-;;;3352:147;3513:114;3620:6;3513:74;-1:-1:-1;;;3513:40:4;:8;3547:5;3513:33;:40::i;:114::-;3171:468;;2705:941;;;;;;:::o;4114:252::-;4242:16;;-1:-1:-1;;;4242:16:4;;4188:12;;;;-1:-1:-1;;;;;;;;;;;1712:64:3;4242:10:4;;:16;;4253:4;;4242:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4242:16:4;;;;;;;;;;;;:::i;:::-;4218:40;;4338:8;4332:15;4325:4;4315:8;4311:19;4308:1;4301:47;4293:55;4278:81;-1:-1:-1;;;4278:81:4:o;1079:133::-;1154:18;;-1:-1:-1;;;1154:18:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;1154:7:4;;:18;;1162:3;;1167:4;;1154:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1183:21:4;;-1:-1:-1;;;1183:21:4;;-1:-1:-1;;;;;10088:15:13;;;1183:21:4;;;10070:34:13;10140:15;;10120:18;;;10113:43;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;1183:8:4;;-1:-1:-1;10005:18:13;;1183:21:4;9987:175:13;478:85:4;-1:-1:-1;;;;;;;;;;;524:7:4;532:22;550:4;532:15;:22;:::i;1865:600:3:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:3;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3058:55:3;3141:16;2031:382;;2251:43;;2075:20;;-1:-1:-1;;;;;;;;;;;1712:64:3;2189:34;;2251:43;;1712:64;;-1:-1:-1;;;2276:17:3;2251:43;;;:::i;:::-;;;;-1:-1:-1;;2251:43:3;;;;;;;;;;2139:178;;;2251:43;2139:178;;:::i;:::-;;;;-1:-1:-1;;2139:178:3;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2031:382;;2434:12;1865:600;-1:-1:-1;1865:600:3:o;2377:83:4:-;2435:17;;-1:-1:-1;;;2435:17:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;2435:7:4;;:17;;2443:2;;2447:4;;2435:17;;;:::i;1645:133::-;1711:22;;-1:-1:-1;;;1711:22:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;1711:7:4;;:22;;1719:3;;-1:-1:-1;;;1724:8:4;1711:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1744:26:4;;-1:-1:-1;;;1744:26:4;;-1:-1:-1;;;;;10088:15:13;;;1744:26:4;;;10070:34:13;10140:15;;10120:18;;;10113:43;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;1744:13:4;;-1:-1:-1;10005:18:13;;1744:26:4;9987:175:13;1976:304:4;2053:81;;;;;15767:2:13;15749:21;;;15806:2;15786:18;;;15779:30;15845:34;15840:2;15825:18;;15818:62;15916:29;15911:2;15896:18;;15889:57;15978:3;15963:19;;15739:249;2053:81:4;;;;;;;;2145:127;2267:4;2145:93;2235:2;2145:66;-1:-1:-1;;;2145:36:4;:8;2175:5;2145:29;:36::i;831:109::-;890:18;;-1:-1:-1;;;890:18:4;;-1:-1:-1;;;;;;;;;;;1712:64:3;890:7:4;;:18;;898:3;;903:4;;890:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;919:13:4;;-1:-1:-1;;;919:13:4;;-1:-1:-1;;;;;9814:32:13;;919:13:4;;;9796:51:13;-1:-1:-1;;;;;;;;;;;1712:64:3;-1:-1:-1;919:8:4;;-1:-1:-1;9769:18:13;;919:13:4;9751:102:13;9856:159:4;9963:12;;;:22;;-1:-1:-1;;;;;;9963:22:4;-1:-1:-1;;;;;9963:22:4;;;;;;;;;;:12;9856:159::o;11178:122::-;11259:33;11273:4;11287:3;11259:13;:33::i;:::-;11178:122;;:::o;11501:1089::-;11621:12;;;;11658:9;;;;11700:11;;;;11745:10;;;11722:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11621:12:4;;;;11658:9;;;;;;11607:11;;11722:33;;11745:10;;11722:33;;11745:10;11722:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11768:17;11805:4;11811:12;11819:3;11811:7;:12::i;:::-;11788:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11788:36:4;;;;;;;;;-1:-1:-1;;;;;11840:15:4;;;;;;:10;;;11788:36;11840:15;;;;;;-1:-1:-1;;;;;;11840:21:4;;;;;;;;;11788:36;;-1:-1:-1;11840:21:4;;:15;;11872:34;;11889:3;;11894:11;;11872:34;;:::i;:::-;;;;-1:-1:-1;;11872:34:4;;;;;;;;;11862:45;;11872:34;11862:45;;;;11840:68;;;;;;;;;;-1:-1:-1;11840:68:4;;;;11835:112;;11925:10;11930:4;11925;:10::i;:::-;;11835:112;-1:-1:-1;;;;;11980:15:4;;11957:12;11980:15;;;;;;;;;;;-1:-1:-1;;;;;;11980:21:4;;;;;;;;;12012:34;;11980:21;;11957:12;;12012:34;;12029:3;;12034:11;;12012:34;;:::i;:::-;;;;;;;;;;;;;12002:45;;;;;;11980:68;;;;;;;;;;;;11972:77;;11957:92;;12062:12;12103:17;12124:3;-1:-1:-1;;;;;12124:14:4;12139:4;12124:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12100:44:4;-1:-1:-1;12166:36:4;;-1:-1:-1;12100:44:4;12187:14;12190:11;12187:2;:14;:::i;:::-;12166;:36::i;:::-;12239:28;;-1:-1:-1;;;12239:28:4;;12159:43;;-1:-1:-1;12224:12:4;;-1:-1:-1;;;;;;;;;;;;12239:17:4;;;:28;;12257:3;;12262:4;;12239:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12224:43;;12292:4;12284;:12;12280:143;;12313:98;;-1:-1:-1;;;12313:98:4;;;;;;;:::i;:::-;;;;;;;;;12433:34;;-1:-1:-1;;;12433:34:4;;-1:-1:-1;;;;;;;;;;;12433:18:4;;;:34;;12452:3;;12457:4;;12463:3;;12433:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12485:12:4;;;12478:19;;-1:-1:-1;;;;;;12478:19:4;;;-1:-1:-1;12515:9:4;;;12508:16;;-1:-1:-1;;12508:16:4;;;12535:17;-1:-1:-1;12542:10:4;;12485:12;12535:17;:::i;:::-;12570:4;:11;;12563:18;;;11501:1089;;;;;;;;;;:::o;12911:361::-;12970:12;13000:19;13032:1;:8;13043:2;13032:13;;;;:::i;:::-;13022:24;;;;;;-1:-1:-1;;;13022:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13022:24:4;;13000:46;;13062:9;13057:182;13081:1;:8;13077:1;:12;13057:182;;;13111:9;13123:1;13125;13123:4;;;;;;-1:-1:-1;;;13123:4:4;;;;;;;;;;;;;;;13111:16;;13211:1;13205;13201:2;13197:10;13193:2;13189:19;13181:6;13177:32;13170:43;13151:77;13091:3;;;;;:::i;:::-;;;;13057:182;;;-1:-1:-1;13258:6:4;12911:361;-1:-1:-1;;12911:361:4:o;6635:3213::-;6767:12;;;;6804:9;;;;6846:11;;;;6891:10;;;6868:33;;;;;;;;;;;;;;;;;;;6728:7;;-1:-1:-1;;;;;6767:12:4;;6804:9;;;6846:11;6728:7;;6868:33;;6891:10;;6868:33;;;6891:10;6868:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;6955:15:4;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;6955:21:4;;;;;;;;;6987:34;;6868:33;;-1:-1:-1;6955:21:4;:15;;-1:-1:-1;6987:34:4;;-1:-1:-1;6868:33:4;;7009:11;;6987:34;;:::i;:::-;;;;-1:-1:-1;;6987:34:4;;;;;;;;;6977:45;;6987:34;6977:45;;;;6955:68;;;;;;;;;;-1:-1:-1;6955:68:4;;;;6951:176;;;-1:-1:-1;;;;;7047:15:4;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;7047:21:4;;;;;;;;;7079:34;;7047:21;;:10;7079:34;;7096:3;;7101:11;;7079:34;;:::i;:::-;;;;;;;;;;;;;7069:45;;;;;;7047:68;;;;;;;;;;;;7040:75;;;;;;6635:3213;;;:::o;6951:176::-;7137:17;7174:4;7180:12;7188:3;7180:7;:12::i;:::-;7157:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7137:56;;-1:-1:-1;;;;;;;;;;;5891:37:4;;-1:-1:-1;;;;;7204:19:4;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7236:12;7277:17;7298:3;-1:-1:-1;;;;;7298:14:4;7313:4;7298:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7274:44:4;-1:-1:-1;7340:36:4;;-1:-1:-1;7274:44:4;7361:14;7364:11;7361:2;:14;:::i;7340:36::-;7437:35;;-1:-1:-1;;;7437:35:4;;-1:-1:-1;;;;;9814:32:13;;7437:35:4;;;9796:51:13;7333:43:4;;-1:-1:-1;7409:22:4;;-1:-1:-1;;;;;;;;;;;;7437:21:4;;;9769:18:13;;7437:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7437:35:4;;;;;;;;;;;;:::i;:::-;7408:64;;;7487:5;:12;7503:1;7487:17;7483:2051;;;7521:12;-1:-1:-1;;;;;;;;;;;5891:37:4;;-1:-1:-1;;;;;7536:17:4;;7554:3;7559:5;7565:1;7559:8;;;;;;-1:-1:-1;;;7559:8:4;;;;;;;;;;;;;;;7536:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7521:47;-1:-1:-1;7587:18:4;7583:108;;7631:44;7652:3;7665:5;7671:1;7665:8;;;;;;-1:-1:-1;;;7665:8:4;;;;;;;;;;;;;;;7657:17;;7631:44;;;;;;;:::i;:::-;;;;;;;;7583:108;7717:4;7709;:12;7705:151;;7742:98;;-1:-1:-1;;;7742:98:4;;;;;;;:::i;:::-;7875:86;7885:3;7890:4;7923:3;7928:11;7906:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7896:45;;;;;;7951:5;7957:1;7951:8;;;;;;-1:-1:-1;;;7951:8:4;;;;;;;;;;;;;;;7943:17;;7875:86;;;;;;;;;:::i;:::-;;;;;;;;8055:5;8061:1;8055:8;;;;;;-1:-1:-1;;;8055:8:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7976:15:4;;8047:17;7976:15;;;;;;;;;;-1:-1:-1;;;;;;7976:21:4;;;;;;;;;8008:34;;8055:8;;7976:21;;8008:34;;8025:3;;8030:11;;8008:34;;:::i;:::-;;;;-1:-1:-1;;8008:34:4;;;;;;;;;7998:45;;8008:34;7998:45;;;;7976:68;;;;;;;;;;;;-1:-1:-1;7976:68:4;;;:88;;;;-1:-1:-1;;;;;8079:15:4;;;;8150:4;8079:10;;;:15;;;;;-1:-1:-1;;;;;;8079:21:4;;;;;;;;;8111:34;;8150:4;;-1:-1:-1;8111:34:4;;8128:3;;8133:11;;8111:34;;:::i;:::-;;;;;;;-1:-1:-1;;8111:34:4;;;;;;8101:45;;8111:34;8101:45;;;;8079:68;;;;;;;;;;-1:-1:-1;8079:68:4;:75;;-1:-1:-1;;8079:75:4;;;;;;;;;;-1:-1:-1;7483:2051:4;;;8191:1;8176:5;:12;:16;8172:1362;;;8214:9;8209:1229;8233:5;:12;8229:1;:16;8209:1229;;;8271:12;-1:-1:-1;;;;;;;;;;;5891:37:4;;-1:-1:-1;;;;;8286:17:4;;8304:3;8309:5;8315:1;8309:8;;;;;;-1:-1:-1;;;8309:8:4;;;;;;;;;;;;;;;8286:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8271:47;-1:-1:-1;8341:18:4;8337:116;;8389:44;8410:3;8423:5;8429:1;8423:8;;;;;;-1:-1:-1;;;8423:8:4;;;;;;;;;;;;;;;8415:17;;8389:44;;;;;;;:::i;:::-;;;;;;;;8337:116;-1:-1:-1;;;;;;;;;;;5891:37:4;;-1:-1:-1;;;;;8497:18:4;;8516:3;8521:5;8527:1;8521:8;;;;;;-1:-1:-1;;;8521:8:4;;;;;;;;;;;;;;;-1:-1:-1;;;8497:53:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8569:12;8600:17;8677:3;-1:-1:-1;;;;;8677:14:4;8692:4;8677:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8659:38:4;;-1:-1:-1;8659:38:4;-1:-1:-1;8727:36:4;8659:38;8748:14;8751:11;8748:2;:14;:::i;8727:36::-;8720:43;;8823:7;:37;;;;;-1:-1:-1;;;8834:4:4;:26;8823:37;8819:546;;;8960:86;8970:3;8975:4;9008:3;9013:11;8991:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8981:45;;;;;;9036:5;9042:1;9036:8;;;;;;-1:-1:-1;;;9036:8:4;;;;;;;;;;;;;;;9028:17;;8960:86;;;;;;;;;:::i;:::-;;;;;;;;9148:5;9154:1;9148:8;;;;;;-1:-1:-1;;;9148:8:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9069:15:4;;9140:17;9069:15;;;;;;;;;;-1:-1:-1;;;;;;9069:21:4;;;;;;;;;9101:34;;9148:8;;9069:21;;9101:34;;9118:3;;9123:11;;9101:34;;:::i;:::-;;;;;;;;;;;;;9091:45;;;;;;9069:68;;;;;;;;;;;:88;;;;9251:4;9180;:10;;:15;9191:3;-1:-1:-1;;;;;9180:15:4;-1:-1:-1;;;;;9180:15:4;;;;;;;;;;;;:21;9196:4;-1:-1:-1;;;;;9180:21:4;;-1:-1:-1;;;;;9180:21:4;;;;;;;;;;;;;:68;9229:3;9234:11;9212:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9202:45;;;;;;9180:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5891:37:4;;-1:-1:-1;;;;;9278:18:4;;9297:3;9302:5;9308:1;9302:8;;;;;;-1:-1:-1;;;9302:8:4;;;;;;;;;;;;;;;9312:4;9278:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9340:5;;;;;8819:546;-1:-1:-1;;;;;;;;;;;5891:37:4;;-1:-1:-1;;;;;9383:18:4;;9402:3;9407:5;9413:1;9407:8;;;;;;-1:-1:-1;;;9407:8:4;;;;;;;;;;;;;;;9417:4;9383:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8209:1229;;;8247:3;;;;;:::i;:::-;;;;8209:1229;;;;8172:1362;;;9470:52;;-1:-1:-1;;;9470:52:4;;14697:2:13;9470:52:4;;;14679:21:13;14736:2;14716:18;;;14709:30;14775:34;14755:18;;;14748:62;-1:-1:-1;;;14826:18:13;;;14819:32;14868:19;;9470:52:4;14669:224:13;9470:52:4;-1:-1:-1;;;;;9554:15:4;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;9554:21:4;;;;;;;;;9586:34;;9554:21;;:15;9586:34;;9603:3;;9608:11;;9586:34;;:::i;:::-;;;;-1:-1:-1;;9586:34:4;;;;;;;;;9576:45;;9586:34;9576:45;;;;9554:68;;;;;;;;;;-1:-1:-1;9554:68:4;;;;9546:89;;;;-1:-1:-1;;;9546:89:4;;16195:2:13;9546:89:4;;;16177:21:13;16234:1;16214:18;;;16207:29;-1:-1:-1;;;16252:18:13;;;16245:38;16300:18;;9546:89:4;16167:157:13;9546:89:4;9655:12;;;9648:19;;-1:-1:-1;;;;;;9648:19:4;;;9685:9;;;9678:16;;-1:-1:-1;;9678:16:4;;;9705:17;-1:-1:-1;9712:10:4;;9655:12;9705:17;:::i;:::-;9733:18;9740:11;;;9733:18;;;-1:-1:-1;;;;;9772:15:4;;;;;;;;;;;;-1:-1:-1;;;;;;9772:21:4;;;;;;;;;9804:34;;9772:21;;9733:18;9804:34;;9821:3;;9826:11;;9804:34;;:::i;:::-;;;;;;;;;;;;;9794:45;;;;;;9772:68;;;;;;;;;;;;9765:75;;;;;;;;;6635:3213;;;:::o;12598:305::-;12672:7;12692:11;12716;12741:2;12730:1;:8;:13;:29;;12751:1;:8;12730:29;;;12746:2;12730:29;12716:43;;12775:6;12770:105;12791:3;12787:1;:7;12770:105;;;12857:5;:1;12861;12857:5;:::i;:::-;12831:1;12833:10;12842:1;12833:6;:10;:::i;:::-;12831:13;;;;;;-1:-1:-1;;;12831:13:4;;;;;;;;;;;;;-1:-1:-1;;;;;;12831:13:4;12823:40;;12816:47;;;;;12796:3;;;;:::i;:::-;;;;12770:105;;;-1:-1:-1;12892:3:4;;12598:305;-1:-1:-1;;;;12598:305:4:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:336:13;78:5;107:52;123:35;151:6;123:35;:::i;:::-;107:52;:::i;:::-;98:61;;182:6;175:5;168:21;222:3;213:6;208:3;204:16;201:25;198:2;;;239:1;236;229:12;198:2;288:6;283:3;276:4;269:5;265:16;252:43;342:1;335:4;326:6;319:5;315:18;311:29;304:40;88:262;;;;;:::o;355:698::-;420:5;473:3;466:4;458:6;454:17;450:27;440:2;;495:5;488;481:20;440:2;528:6;522:13;554:4;578:68;594:51;642:2;594:51;:::i;578:68::-;668:3;692:2;687:3;680:15;720:2;715:3;711:12;704:19;;755:2;747:6;743:15;807:3;802:2;796;793:1;789:10;781:6;777:23;773:32;770:41;767:2;;;828:5;821;814:20;767:2;854:5;868:156;882:2;879:1;876:9;868:156;;;939:10;;927:23;;970:12;;;;1002;;;;900:1;893:9;868:156;;;-1:-1:-1;1042:5:13;;430:623;-1:-1:-1;;;;;;;430:623:13:o;1058:229::-;1101:5;1154:3;1147:4;1139:6;1135:17;1131:27;1121:2;;1176:5;1169;1162:20;1121:2;1202:79;1277:3;1268:6;1255:20;1248:4;1240:6;1236:17;1202:79;:::i;:::-;1193:88;1111:176;-1:-1:-1;;;1111:176:13:o;1292:257::-;1351:6;1404:2;1392:9;1383:7;1379:23;1375:32;1372:2;;;1425:6;1417;1410:22;1372:2;1469:9;1456:23;1488:31;1513:5;1488:31;:::i;1554:261::-;1624:6;1677:2;1665:9;1656:7;1652:23;1648:32;1645:2;;;1698:6;1690;1683:22;1645:2;1735:9;1729:16;1754:31;1779:5;1754:31;:::i;1820:398::-;1888:6;1896;1949:2;1937:9;1928:7;1924:23;1920:32;1917:2;;;1970:6;1962;1955:22;1917:2;2014:9;2001:23;2033:31;2058:5;2033:31;:::i;:::-;2083:5;-1:-1:-1;2140:2:13;2125:18;;2112:32;2153:33;2112:32;2153:33;:::i;:::-;2205:7;2195:17;;;1907:311;;;;;:::o;2223:466::-;2300:6;2308;2316;2369:2;2357:9;2348:7;2344:23;2340:32;2337:2;;;2390:6;2382;2375:22;2337:2;2434:9;2421:23;2453:31;2478:5;2453:31;:::i;:::-;2503:5;-1:-1:-1;2560:2:13;2545:18;;2532:32;2573:33;2532:32;2573:33;:::i;:::-;2327:362;;2625:7;;-1:-1:-1;;;2679:2:13;2664:18;;;;2651:32;;2327:362::o;2694:602::-;2777:6;2785;2793;2801;2854:3;2842:9;2833:7;2829:23;2825:33;2822:2;;;2876:6;2868;2861:22;2822:2;2920:9;2907:23;2939:31;2964:5;2939:31;:::i;:::-;2989:5;-1:-1:-1;3046:2:13;3031:18;;3018:32;3059:33;3018:32;3059:33;:::i;:::-;3111:7;-1:-1:-1;3165:2:13;3150:18;;3137:32;;-1:-1:-1;3221:2:13;3206:18;;3193:32;3234:30;3193:32;3234:30;:::i;:::-;2812:484;;;;-1:-1:-1;2812:484:13;;-1:-1:-1;;2812:484:13:o;3301:325::-;3369:6;3377;3430:2;3418:9;3409:7;3405:23;3401:32;3398:2;;;3451:6;3443;3436:22;3398:2;3495:9;3482:23;3514:31;3539:5;3514:31;:::i;:::-;3564:5;3616:2;3601:18;;;;3588:32;;-1:-1:-1;;;3388:238:13:o;3631:1028::-;3734:6;3765:2;3808;3796:9;3787:7;3783:23;3779:32;3776:2;;;3829:6;3821;3814:22;3776:2;3867:9;3861:16;3900:18;3892:6;3889:30;3886:2;;;3937:6;3929;3922:22;3886:2;3965:22;;4018:4;4010:13;;4006:27;-1:-1:-1;3996:2:13;;4052:6;4044;4037:22;3996:2;4086;4080:9;4109:68;4125:51;4173:2;4125:51;:::i;4109:68::-;4199:3;4223:2;4218:3;4211:15;4251:2;4246:3;4242:12;4235:19;;4282:2;4278;4274:11;4330:7;4325:2;4319;4316:1;4312:10;4308:2;4304:19;4300:28;4297:41;4294:2;;;4356:6;4348;4341:22;4294:2;4383:6;4374:15;;4398:231;4412:2;4409:1;4406:9;4398:231;;;4476:3;4470:10;4493:31;4518:5;4493:31;:::i;:::-;4537:18;;4430:1;4423:9;;;;;4575:12;;;;4607;;4398:231;;;-1:-1:-1;4648:5:13;3745:914;-1:-1:-1;;;;;;;3745:914:13:o;4664:644::-;4793:6;4801;4854:2;4842:9;4833:7;4829:23;4825:32;4822:2;;;4875:6;4867;4860:22;4822:2;4913:9;4907:16;4942:18;4983:2;4975:6;4972:14;4969:2;;;5004:6;4996;4989:22;4969:2;5032:72;5096:7;5087:6;5076:9;5072:22;5032:72;:::i;:::-;5022:82;;5150:2;5139:9;5135:18;5129:25;5113:41;;5179:2;5169:8;5166:16;5163:2;;;5200:6;5192;5185:22;5163:2;;5228:74;5294:7;5283:8;5272:9;5268:24;5228:74;:::i;:::-;5218:84;;;4812:496;;;;;:::o;5313:255::-;5380:6;5433:2;5421:9;5412:7;5408:23;5404:32;5401:2;;;5454:6;5446;5439:22;5401:2;5491:9;5485:16;5510:28;5532:5;5510:28;:::i;5573:194::-;5643:6;5696:2;5684:9;5675:7;5671:23;5667:32;5664:2;;;5717:6;5709;5702:22;5664:2;-1:-1:-1;5745:16:13;;5654:113;-1:-1:-1;5654:113:13:o;5772:674::-;5851:6;5904:2;5892:9;5883:7;5879:23;5875:32;5872:2;;;5925:6;5917;5910:22;5872:2;5963:9;5957:16;5996:18;5988:6;5985:30;5982:2;;;6033:6;6025;6018:22;5982:2;6061:22;;6114:4;6106:13;;6102:27;-1:-1:-1;6092:2:13;;6148:6;6140;6133:22;6092:2;6182;6176:9;6207:48;6223:31;6251:2;6223:31;:::i;6207:48::-;6278:2;6271:5;6264:17;6318:7;6313:2;6308;6304;6300:11;6296:20;6293:33;6290:2;;;6344:6;6336;6329:22;6290:2;6362:54;6413:2;6408;6401:5;6397:14;6392:2;6388;6384:11;6362:54;:::i;:::-;6435:5;5862:584;-1:-1:-1;;;;;5862:584:13:o;6451:342::-;6520:6;6573:2;6561:9;6552:7;6548:23;6544:32;6541:2;;;6594:6;6586;6579:22;6541:2;6639:9;6626:23;6672:18;6664:6;6661:30;6658:2;;;6709:6;6701;6694:22;6658:2;6737:50;6779:7;6770:6;6759:9;6755:22;6737:50;:::i;:::-;6727:60;6531:262;-1:-1:-1;;;;6531:262:13:o;6798:710::-;6885:6;6893;6946:2;6934:9;6925:7;6921:23;6917:32;6914:2;;;6967:6;6959;6952:22;6914:2;7012:9;6999:23;7041:18;7082:2;7074:6;7071:14;7068:2;;;7103:6;7095;7088:22;7068:2;7131:50;7173:7;7164:6;7153:9;7149:22;7131:50;:::i;:::-;7121:60;;7234:2;7223:9;7219:18;7206:32;7190:48;;7263:2;7253:8;7250:16;7247:2;;;7284:6;7276;7269:22;7247:2;-1:-1:-1;7312:24:13;;7367:4;7359:13;;7355:27;-1:-1:-1;7345:2:13;;7401:6;7393;7386:22;7345:2;7429:73;7494:7;7489:2;7476:16;7471:2;7467;7463:11;7429:73;:::i;7513:190::-;7572:6;7625:2;7613:9;7604:7;7600:23;7596:32;7593:2;;;7646:6;7638;7631:22;7593:2;-1:-1:-1;7674:23:13;;7583:120;-1:-1:-1;7583:120:13:o;7907:612::-;8153:13;;8096:3;;8127;;8206:4;8233:15;;;8096:3;8278:175;8292:6;8289:1;8286:13;8278:175;;;8355:13;;8341:28;;8391:14;;;;8428:15;;;;8314:1;8307:9;8278:175;;;-1:-1:-1;;8462:21:13;;;-1:-1:-1;8499:14:13;;;;;-1:-1:-1;;;8104:415:13:o;8524:371::-;-1:-1:-1;;;;;;8709:33:13;;8697:46;;8766:13;;8679:3;;8788:61;8766:13;8838:1;8829:11;;8822:4;8810:17;;8788:61;:::i;:::-;8869:16;;;;8887:1;8865:24;;8687:208;-1:-1:-1;;;8687:208:13:o;8900:274::-;9029:3;9067:6;9061:13;9083:53;9129:6;9124:3;9117:4;9109:6;9105:17;9083:53;:::i;:::-;9152:16;;;;;9037:137;-1:-1:-1;;9037:137:13:o;9179:466::-;9354:3;9392:6;9386:13;9408:53;9454:6;9449:3;9442:4;9434:6;9430:17;9408:53;:::i;:::-;9524:13;;9483:16;;;;9546:57;9524:13;9483:16;9580:4;9568:17;;9546:57;:::i;:::-;9619:20;;9362:283;-1:-1:-1;;;;9362:283:13:o;10167:274::-;-1:-1:-1;;;;;10359:32:13;;;;10341:51;;10423:2;10408:18;;10401:34;10329:2;10314:18;;10296:145::o;10446:345::-;-1:-1:-1;;;;;10666:32:13;;;;10648:51;;10730:2;10715:18;;10708:34;;;;10773:2;10758:18;;10751:34;10636:2;10621:18;;10603:188::o;10796:442::-;-1:-1:-1;;;;;11043:32:13;;;;11025:51;;-1:-1:-1;;;;;;11112:33:13;;;;11107:2;11092:18;;11085:61;11177:2;11162:18;;11155:34;11220:2;11205:18;;11198:34;11012:3;10997:19;;10979:259::o;13618:383::-;13767:2;13756:9;13749:21;13730:4;13799:6;13793:13;13842:6;13837:2;13826:9;13822:18;13815:34;13858:66;13917:6;13912:2;13901:9;13897:18;13892:2;13884:6;13880:15;13858:66;:::i;:::-;13985:2;13964:15;-1:-1:-1;;13960:29:13;13945:45;;;;13992:2;13941:54;;13739:262;-1:-1:-1;;13739:262:13:o;14006:484::-;14208:2;14190:21;;;14247:2;14227:18;;;14220:30;14286:34;14281:2;14266:18;;14259:62;14357:34;14352:2;14337:18;;14330:62;-1:-1:-1;;;14423:3:13;14408:19;;14401:47;14480:3;14465:19;;14180:310::o;17178:275::-;17249:2;17243:9;17314:2;17295:13;;-1:-1:-1;;17291:27:13;17279:40;;17349:18;17334:34;;17370:22;;;17331:62;17328:2;;;17396:18;;:::i;:::-;17432:2;17425:22;17223:230;;-1:-1:-1;17223:230:13:o;17458:191::-;17526:4;17559:18;17551:6;17548:30;17545:2;;;17581:18;;:::i;:::-;-1:-1:-1;17626:1:13;17622:14;17638:4;17618:25;;17535:114::o;17654:186::-;17702:4;17735:18;17727:6;17724:30;17721:2;;;17757:18;;:::i;:::-;-1:-1:-1;17823:2:13;17802:15;-1:-1:-1;;17798:29:13;17829:4;17794:40;;17711:129::o;17845:128::-;17885:3;17916:1;17912:6;17909:1;17906:13;17903:2;;;17922:18;;:::i;:::-;-1:-1:-1;17958:9:13;;17893:80::o;17978:168::-;18018:7;18084:1;18080;18076:6;18072:14;18069:1;18066:21;18061:1;18054:9;18047:17;18043:45;18040:2;;;18091:18;;:::i;:::-;-1:-1:-1;18131:9:13;;18030:116::o;18151:125::-;18191:4;18219:1;18216;18213:8;18210:2;;;18224:18;;:::i;:::-;-1:-1:-1;18261:9:13;;18200:76::o;18281:258::-;18353:1;18363:113;18377:6;18374:1;18371:13;18363:113;;;18453:11;;;18447:18;18434:11;;;18427:39;18399:2;18392:10;18363:113;;;18494:6;18491:1;18488:13;18485:2;;;18529:1;18520:6;18515:3;18511:16;18504:27;18485:2;;18334:205;;;:::o;18544:135::-;18583:3;-1:-1:-1;;18604:17:13;;18601:2;;;18624:18;;:::i;:::-;-1:-1:-1;18671:1:13;18660:13;;18591:88::o;18684:127::-;18745:10;18740:3;18736:20;18733:1;18726:31;18776:4;18773:1;18766:15;18800:4;18797:1;18790:15;18816:127;18877:10;18872:3;18868:20;18865:1;18858:31;18908:4;18905:1;18898:15;18932:4;18929:1;18922:15;18948:131;-1:-1:-1;;;;;19023:31:13;;19013:42;;19003:2;;19069:1;19066;19059:12;19084:118;19170:5;19163:13;19156:21;19149:5;19146:32;19136:2;;19192:1;19189;19182:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"WARNING_Deprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"adjust\",\"type\":\"bool\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"rewind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/Exchange.t.sol\":\"BaseSetup\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Exchange.sol\":{\"keccak256\":\"0x2ec9e8f6c0f25e6c63f947adaecbf07b8a75e36b0f9885302b7615d809d218cb\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://484b9f6e0140541c595870b2505dee98a2b30f2c46bba6dfe1831f12d85f1c23\",\"dweb:/ipfs/QmRYgpJkKDS3Zr5QgS5ikDcvdYCGcKE3CqRpeVbNygtdBN\"]},\"contracts/Factory.sol\":{\"keccak256\":\"0xd025ad10cff39189c2bd9826cdffa70ad01196dd8f8ffb54e5b2707db26dd9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5fdb8baed480118b9758be7d1e5e3c8d1e361ed46599675a1e3c3c5d0f4388e\",\"dweb:/ipfs/QmXFEPzCGcg5rrjAj4aCLf5phZsg6aXdk5DhvjeHTs66jG\"]},\"contracts/MOCK_ERC20.sol\":{\"keccak256\":\"0x9142059566add45e438eec612835d52d9cdb2bb07588aa2b3f69bd9955fb438c\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://99855c2fc95c4a73053e0dafb5d3ed275efeb26ac0ae815c4cd3952a4015ffd9\",\"dweb:/ipfs/QmXNWHzF7eXbcLrDQgu1259iC29bjAqVrB5WSV4nvWkCnw\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xd2907fc0f4fce0d02ee94248ae904637703ad23a944df5b044be7b80833b304a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9cc900f744cee33f078d4d66740c0fbf67d4c831ec44da8e1d6412f62b4a3ea6\",\"dweb:/ipfs/QmW1ANjSBk58v2RiPUwbTXRw2fmarTxiKeU4VqVSzsgsUx\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xead31e4de0ef5591a934f85d8112cd2afec7d100a7756b57563098a96fc462a4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://710b631ed1fb8a47bfd47e867e1bf210bf06333ca62ee0c85fabf1ed4124094c\",\"dweb:/ipfs/QmUsc2aqD6x8AFEoH1Cbef4ru1bqTuBzs7pQTamBF7CLre\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x307455a1c04b7a4f87313ff608555d6614d60d3319bd2b5bfeb65ee6128b4421\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b746047a76f37d63a9a14bd73019c63ad66b52112b297e36b607fa40da104e48\",\"dweb:/ipfs/QmUfuV83esgaAS5Fo4UYKhaMLVRQJicWsQFRC9bBgoPxNM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf213bd377a21fbbb90c14c80ddfcf5ae98d6defd5b2853fcf984593c8e3c6f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09bb611e9c4addc1a53182e07b58c95145d828209f4811db16e2b78c020b00a6\",\"dweb:/ipfs/Qma66FtQ2U8hpBjr26VXXWBrY7cuLZzy7jyWL19fbStyMc\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/foundry/Exchange.t.sol\":{\"keccak256\":\"0xd5de9195974998f48c04bcd36d4f6a03d68c8eacc7053bc6a664c84dc0d15bf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ffc37f33b66408cdb1a9e858ce6a18d9651893051ac1515c0b3b2b3c4bafb8a\",\"dweb:/ipfs/QmdnSiC7JTJJMSZrB886AQZoN5fEvHYpADgr8sHVMqaRxW\"]},\"test/foundry/utils/Utils.sol\":{\"keccak256\":\"0xaf7f66bd0e5b68ddfaa65a5ae20dd60a61d2c06f90ad0d9d739c52e8b4625b5e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a559d9adf9bad12b4929a709fcfbd6dc2518a6b677b9be17b70ce9c29282ee46\",\"dweb:/ipfs/QmaqYP7iW2sToLbGKPRxmAbeSW4z7hTHL3ri5JmMe3LPYP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.4+commit.c7e474f2"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "msg",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_Deprecated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "adjust",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rewind"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skip"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "tip"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/Exchange.t.sol": "BaseSetup"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Exchange.sol": {
        "keccak256": "0x2ec9e8f6c0f25e6c63f947adaecbf07b8a75e36b0f9885302b7615d809d218cb",
        "urls": [
          "bzz-raw://484b9f6e0140541c595870b2505dee98a2b30f2c46bba6dfe1831f12d85f1c23",
          "dweb:/ipfs/QmRYgpJkKDS3Zr5QgS5ikDcvdYCGcKE3CqRpeVbNygtdBN"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/Factory.sol": {
        "keccak256": "0xd025ad10cff39189c2bd9826cdffa70ad01196dd8f8ffb54e5b2707db26dd9df",
        "urls": [
          "bzz-raw://a5fdb8baed480118b9758be7d1e5e3c8d1e361ed46599675a1e3c3c5d0f4388e",
          "dweb:/ipfs/QmXFEPzCGcg5rrjAj4aCLf5phZsg6aXdk5DhvjeHTs66jG"
        ],
        "license": "MIT"
      },
      "contracts/MOCK_ERC20.sol": {
        "keccak256": "0x9142059566add45e438eec612835d52d9cdb2bb07588aa2b3f69bd9955fb438c",
        "urls": [
          "bzz-raw://99855c2fc95c4a73053e0dafb5d3ed275efeb26ac0ae815c4cd3952a4015ffd9",
          "dweb:/ipfs/QmXNWHzF7eXbcLrDQgu1259iC29bjAqVrB5WSV4nvWkCnw"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xd2907fc0f4fce0d02ee94248ae904637703ad23a944df5b044be7b80833b304a",
        "urls": [
          "bzz-raw://9cc900f744cee33f078d4d66740c0fbf67d4c831ec44da8e1d6412f62b4a3ea6",
          "dweb:/ipfs/QmW1ANjSBk58v2RiPUwbTXRw2fmarTxiKeU4VqVSzsgsUx"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xead31e4de0ef5591a934f85d8112cd2afec7d100a7756b57563098a96fc462a4",
        "urls": [
          "bzz-raw://710b631ed1fb8a47bfd47e867e1bf210bf06333ca62ee0c85fabf1ed4124094c",
          "dweb:/ipfs/QmUsc2aqD6x8AFEoH1Cbef4ru1bqTuBzs7pQTamBF7CLre"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x307455a1c04b7a4f87313ff608555d6614d60d3319bd2b5bfeb65ee6128b4421",
        "urls": [
          "bzz-raw://b746047a76f37d63a9a14bd73019c63ad66b52112b297e36b607fa40da104e48",
          "dweb:/ipfs/QmUfuV83esgaAS5Fo4UYKhaMLVRQJicWsQFRC9bBgoPxNM"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf213bd377a21fbbb90c14c80ddfcf5ae98d6defd5b2853fcf984593c8e3c6f54",
        "urls": [
          "bzz-raw://09bb611e9c4addc1a53182e07b58c95145d828209f4811db16e2b78c020b00a6",
          "dweb:/ipfs/Qma66FtQ2U8hpBjr26VXXWBrY7cuLZzy7jyWL19fbStyMc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/foundry/Exchange.t.sol": {
        "keccak256": "0xd5de9195974998f48c04bcd36d4f6a03d68c8eacc7053bc6a664c84dc0d15bf4",
        "urls": [
          "bzz-raw://7ffc37f33b66408cdb1a9e858ce6a18d9651893051ac1515c0b3b2b3c4bafb8a",
          "dweb:/ipfs/QmdnSiC7JTJJMSZrB886AQZoN5fEvHYpADgr8sHVMqaRxW"
        ],
        "license": "MIT"
      },
      "test/foundry/utils/Utils.sol": {
        "keccak256": "0xaf7f66bd0e5b68ddfaa65a5ae20dd60a61d2c06f90ad0d9d739c52e8b4625b5e",
        "urls": [
          "bzz-raw://a559d9adf9bad12b4929a709fcfbd6dc2518a6b677b9be17b70ce9c29282ee46",
          "dweb:/ipfs/QmaqYP7iW2sToLbGKPRxmAbeSW4z7hTHL3ri5JmMe3LPYP"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/Exchange.t.sol",
    "id": 13990,
    "exportedSymbols": {
      "BaseSetup": [
        13078
      ],
      "Context": [
        12920
      ],
      "ERC20": [
        12795
      ],
      "Exchange": [
        584
      ],
      "Exchange_Test": [
        13989
      ],
      "Factory": [
        657
      ],
      "IERC20": [
        12873
      ],
      "IERC20Metadata": [
        12898
      ],
      "IFactory": [
        11
      ],
      "MOCK_ERC20": [
        683
      ],
      "StdStorage": [
        3005
      ],
      "Test": [
        2907
      ],
      "Utils": [
        14107
      ],
      "console": [
        12208
      ],
      "stdStorage": [
        3962
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:12402:11",
    "nodes": [
      {
        "id": 12922,
        "nodeType": "PragmaDirective",
        "src": "33:22:11",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8"
        ]
      },
      {
        "id": 12924,
        "nodeType": "ImportDirective",
        "src": "59:46:11",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13990,
        "sourceUnit": 12209,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12923,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "67:7:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12928,
        "nodeType": "ImportDirective",
        "src": "107:64:11",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13990,
        "sourceUnit": 3963,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12925,
              "name": "stdStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "115:10:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 12926,
              "name": "StdStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "127:10:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 12927,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "139:4:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12930,
        "nodeType": "ImportDirective",
        "src": "173:70:11",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13990,
        "sourceUnit": 12874,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12929,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "181:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12932,
        "nodeType": "ImportDirective",
        "src": "247:40:11",
        "nodes": [],
        "absolutePath": "test/foundry/utils/Utils.sol",
        "file": "./utils/Utils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13990,
        "sourceUnit": 14108,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12931,
              "name": "Utils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "255:5:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12933,
        "nodeType": "ImportDirective",
        "src": "289:40:11",
        "nodes": [],
        "absolutePath": "contracts/MOCK_ERC20.sol",
        "file": "../../contracts/MOCK_ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13990,
        "sourceUnit": 684,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12934,
        "nodeType": "ImportDirective",
        "src": "331:38:11",
        "nodes": [],
        "absolutePath": "contracts/Exchange.sol",
        "file": "../../contracts/Exchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13990,
        "sourceUnit": 585,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12935,
        "nodeType": "ImportDirective",
        "src": "371:37:11",
        "nodes": [],
        "absolutePath": "contracts/Factory.sol",
        "file": "../../contracts/Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13990,
        "sourceUnit": 658,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13078,
        "nodeType": "ContractDefinition",
        "src": "412:999:11",
        "nodes": [
          {
            "id": 12940,
            "nodeType": "VariableDeclaration",
            "src": "445:20:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utils",
            "nameLocation": "460:5:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Utils_$14107",
              "typeString": "contract Utils"
            },
            "typeName": {
              "id": 12939,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12938,
                "name": "Utils",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14107,
                "src": "445:5:11"
              },
              "referencedDeclaration": 14107,
              "src": "445:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$14107",
                "typeString": "contract Utils"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12943,
            "nodeType": "VariableDeclaration",
            "src": "471:26:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "exchange",
            "nameLocation": "489:8:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Exchange_$584",
              "typeString": "contract Exchange"
            },
            "typeName": {
              "id": 12942,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12941,
                "name": "Exchange",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 584,
                "src": "471:8:11"
              },
              "referencedDeclaration": 584,
              "src": "471:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$584",
                "typeString": "contract Exchange"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12946,
            "nodeType": "VariableDeclaration",
            "src": "503:27:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "exchange2",
            "nameLocation": "521:9:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Exchange_$584",
              "typeString": "contract Exchange"
            },
            "typeName": {
              "id": 12945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12944,
                "name": "Exchange",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 584,
                "src": "503:8:11"
              },
              "referencedDeclaration": 584,
              "src": "503:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$584",
                "typeString": "contract Exchange"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12949,
            "nodeType": "VariableDeclaration",
            "src": "538:25:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "558:5:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
              "typeString": "contract MOCK_ERC20"
            },
            "typeName": {
              "id": 12948,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12947,
                "name": "MOCK_ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 683,
                "src": "538:10:11"
              },
              "referencedDeclaration": 683,
              "src": "538:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                "typeString": "contract MOCK_ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12952,
            "nodeType": "VariableDeclaration",
            "src": "584:26:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token2",
            "nameLocation": "604:6:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
              "typeString": "contract MOCK_ERC20"
            },
            "typeName": {
              "id": 12951,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12950,
                "name": "MOCK_ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 683,
                "src": "584:10:11"
              },
              "referencedDeclaration": 683,
              "src": "584:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                "typeString": "contract MOCK_ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12955,
            "nodeType": "VariableDeclaration",
            "src": "630:24:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "647:7:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Factory_$657",
              "typeString": "contract Factory"
            },
            "typeName": {
              "id": 12954,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12953,
                "name": "Factory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 657,
                "src": "630:7:11"
              },
              "referencedDeclaration": 657,
              "src": "630:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Factory_$657",
                "typeString": "contract Factory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12958,
            "nodeType": "VariableDeclaration",
            "src": "662:32:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "689:5:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 12956,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "662:15:11",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 12957,
              "nodeType": "ArrayTypeName",
              "src": "662:17:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12960,
            "nodeType": "VariableDeclaration",
            "src": "700:22:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user1",
            "nameLocation": "717:5:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12959,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "700:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12962,
            "nodeType": "VariableDeclaration",
            "src": "728:22:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user2",
            "nameLocation": "745:5:11",
            "scope": 13078,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12961,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "728:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 13077,
            "nodeType": "FunctionDefinition",
            "src": "758:648:11",
            "nodes": [],
            "body": {
              "id": 13076,
              "nodeType": "Block",
              "src": "790:616:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12965,
                      "name": "utils",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12940,
                      "src": "800:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$14107",
                        "typeString": "contract Utils"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "808:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Utils_$14107_$",
                          "typeString": "function () returns (contract Utils)"
                        },
                        "typeName": {
                          "id": 12967,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12966,
                            "name": "Utils",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14107,
                            "src": "812:5:11"
                          },
                          "referencedDeclaration": 14107,
                          "src": "812:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$14107",
                            "typeString": "contract Utils"
                          }
                        }
                      },
                      "id": 12969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "808:11:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$14107",
                        "typeString": "contract Utils"
                      }
                    },
                    "src": "800:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Utils_$14107",
                      "typeString": "contract Utils"
                    }
                  },
                  "id": 12971,
                  "nodeType": "ExpressionStatement",
                  "src": "800:19:11"
                },
                {
                  "expression": {
                    "id": 12977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12972,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12958,
                      "src": "829:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 12975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "855:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 12973,
                          "name": "utils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12940,
                          "src": "837:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$14107",
                            "typeString": "contract Utils"
                          }
                        },
                        "id": 12974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14087,
                        "src": "837:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) external returns (address payable[] memory)"
                        }
                      },
                      "id": 12976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "837:20:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "829:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 12978,
                  "nodeType": "ExpressionStatement",
                  "src": "829:28:11"
                },
                {
                  "expression": {
                    "id": 12983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12979,
                      "name": "user1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12960,
                      "src": "867:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 12980,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12958,
                        "src": "875:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 12982,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 12981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "875:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "867:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12984,
                  "nodeType": "ExpressionStatement",
                  "src": "867:16:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12988,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12960,
                        "src": "902:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "7573657231",
                        "id": 12989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "909:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                          "typeString": "literal_string \"user1\""
                        },
                        "value": "user1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                          "typeString": "literal_string \"user1\""
                        }
                      ],
                      "expression": {
                        "id": 12985,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "893:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4138,
                      "src": "893:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 12990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12991,
                  "nodeType": "ExpressionStatement",
                  "src": "893:24:11"
                },
                {
                  "expression": {
                    "id": 12996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12992,
                      "name": "user2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12962,
                      "src": "927:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 12993,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12958,
                        "src": "935:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 12995,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 12994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "941:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "935:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "927:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12997,
                  "nodeType": "ExpressionStatement",
                  "src": "927:16:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13001,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12962,
                        "src": "962:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "7573657232",
                        "id": 13002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "969:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                          "typeString": "literal_string \"user2\""
                        },
                        "value": "user2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                          "typeString": "literal_string \"user2\""
                        }
                      ],
                      "expression": {
                        "id": 12998,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "953:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4138,
                      "src": "953:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 13003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13004,
                  "nodeType": "ExpressionStatement",
                  "src": "953:24:11"
                },
                {
                  "expression": {
                    "id": 13013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13005,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12949,
                      "src": "989:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                        "typeString": "contract MOCK_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d4f434b5f4552433230",
                          "id": 13009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1012:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_676b53e69c58068efc40bd2be8571410303179e3ed1e5f3115c662c6032f92cc",
                            "typeString": "literal_string \"MOCK_ERC20\""
                          },
                          "value": "MOCK_ERC20"
                        },
                        {
                          "hexValue": "4d4f434b",
                          "id": 13010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1025:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_68c517c66587983dacbde85dde74f9eb525b7881b1753cee39b9677a9d863af0",
                            "typeString": "literal_string \"MOCK\""
                          },
                          "value": "MOCK"
                        },
                        {
                          "hexValue": "32303030653138",
                          "id": 13011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1033:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000000"
                          },
                          "value": "2000e18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_676b53e69c58068efc40bd2be8571410303179e3ed1e5f3115c662c6032f92cc",
                            "typeString": "literal_string \"MOCK_ERC20\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_68c517c66587983dacbde85dde74f9eb525b7881b1753cee39b9677a9d863af0",
                            "typeString": "literal_string \"MOCK\""
                          },
                          {
                            "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000000"
                          }
                        ],
                        "id": 13008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "997:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_MOCK_ERC20_$683_$",
                          "typeString": "function (string memory,string memory,uint256) returns (contract MOCK_ERC20)"
                        },
                        "typeName": {
                          "id": 13007,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 13006,
                            "name": "MOCK_ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 683,
                            "src": "1001:10:11"
                          },
                          "referencedDeclaration": 683,
                          "src": "1001:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                            "typeString": "contract MOCK_ERC20"
                          }
                        }
                      },
                      "id": 13012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "997:44:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                        "typeString": "contract MOCK_ERC20"
                      }
                    },
                    "src": "989:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                      "typeString": "contract MOCK_ERC20"
                    }
                  },
                  "id": 13014,
                  "nodeType": "ExpressionStatement",
                  "src": "989:52:11"
                },
                {
                  "expression": {
                    "id": 13023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13015,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12952,
                      "src": "1051:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                        "typeString": "contract MOCK_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "524f434b5f4552433230",
                          "id": 13019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1075:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_df886dc637a9052179462d1cba6ed995a553ce92604eaaef304c6a01f690cdcc",
                            "typeString": "literal_string \"ROCK_ERC20\""
                          },
                          "value": "ROCK_ERC20"
                        },
                        {
                          "hexValue": "524f434b",
                          "id": 13020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1088:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_90a7d15af89e5a62ef5f92c5f78a4971fdf12f814cf2c7b36f4de81f8bfeb754",
                            "typeString": "literal_string \"ROCK\""
                          },
                          "value": "ROCK"
                        },
                        {
                          "hexValue": "32303030653138",
                          "id": 13021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1096:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000000"
                          },
                          "value": "2000e18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_df886dc637a9052179462d1cba6ed995a553ce92604eaaef304c6a01f690cdcc",
                            "typeString": "literal_string \"ROCK_ERC20\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_90a7d15af89e5a62ef5f92c5f78a4971fdf12f814cf2c7b36f4de81f8bfeb754",
                            "typeString": "literal_string \"ROCK\""
                          },
                          {
                            "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000000"
                          }
                        ],
                        "id": 13018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1060:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_MOCK_ERC20_$683_$",
                          "typeString": "function (string memory,string memory,uint256) returns (contract MOCK_ERC20)"
                        },
                        "typeName": {
                          "id": 13017,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 13016,
                            "name": "MOCK_ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 683,
                            "src": "1064:10:11"
                          },
                          "referencedDeclaration": 683,
                          "src": "1064:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                            "typeString": "contract MOCK_ERC20"
                          }
                        }
                      },
                      "id": 13022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1060:44:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                        "typeString": "contract MOCK_ERC20"
                      }
                    },
                    "src": "1051:53:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                      "typeString": "contract MOCK_ERC20"
                    }
                  },
                  "id": 13024,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:53:11"
                },
                {
                  "expression": {
                    "id": 13030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13025,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12955,
                      "src": "1123:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$657",
                        "typeString": "contract Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 13028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1133:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Factory_$657_$",
                          "typeString": "function () returns (contract Factory)"
                        },
                        "typeName": {
                          "id": 13027,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 13026,
                            "name": "Factory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 657,
                            "src": "1137:7:11"
                          },
                          "referencedDeclaration": 657,
                          "src": "1137:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Factory_$657",
                            "typeString": "contract Factory"
                          }
                        }
                      },
                      "id": 13029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1133:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$657",
                        "typeString": "contract Factory"
                      }
                    },
                    "src": "1123:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Factory_$657",
                      "typeString": "contract Factory"
                    }
                  },
                  "id": 13031,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:23:11"
                },
                {
                  "expression": {
                    "id": 13042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13032,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12943,
                      "src": "1156:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$584",
                        "typeString": "contract Exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 13038,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12949,
                                  "src": "1207:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                                    "typeString": "contract MOCK_ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                                    "typeString": "contract MOCK_ERC20"
                                  }
                                ],
                                "id": 13037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1199:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 13036,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1199:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 13039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1199:14:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 13034,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12955,
                              "src": "1176:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Factory_$657",
                                "typeString": "contract Factory"
                              }
                            },
                            "id": 13035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createExchange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 644,
                            "src": "1176:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) external returns (address)"
                            }
                          },
                          "id": 13040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1176:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13033,
                        "name": "Exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "1167:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Exchange_$584_$",
                          "typeString": "type(contract Exchange)"
                        }
                      },
                      "id": 13041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1167:48:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$584",
                        "typeString": "contract Exchange"
                      }
                    },
                    "src": "1156:59:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Exchange_$584",
                      "typeString": "contract Exchange"
                    }
                  },
                  "id": 13043,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:59:11"
                },
                {
                  "expression": {
                    "id": 13054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13044,
                      "name": "exchange2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12946,
                      "src": "1225:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$584",
                        "typeString": "contract Exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 13050,
                                  "name": "token2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12952,
                                  "src": "1277:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                                    "typeString": "contract MOCK_ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                                    "typeString": "contract MOCK_ERC20"
                                  }
                                ],
                                "id": 13049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1269:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 13048,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1269:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 13051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1269:15:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 13046,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12955,
                              "src": "1246:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Factory_$657",
                                "typeString": "contract Factory"
                              }
                            },
                            "id": 13047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createExchange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 644,
                            "src": "1246:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) external returns (address)"
                            }
                          },
                          "id": 13052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1246:39:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13045,
                        "name": "Exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "1237:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Exchange_$584_$",
                          "typeString": "type(contract Exchange)"
                        }
                      },
                      "id": 13053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1237:49:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$584",
                        "typeString": "contract Exchange"
                      }
                    },
                    "src": "1225:61:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Exchange_$584",
                      "typeString": "contract Exchange"
                    }
                  },
                  "id": 13055,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13061,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "1327:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          ],
                          "id": 13060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1319:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13059,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1319:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1319:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030653138",
                        "id": 13063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1338:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000000"
                        },
                        "value": "2000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13056,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12949,
                        "src": "1305:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                          "typeString": "contract MOCK_ERC20"
                        }
                      },
                      "id": 13058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12375,
                      "src": "1305:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 13064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13065,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13071,
                            "name": "exchange2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12946,
                            "src": "1379:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          ],
                          "id": 13070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1371:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1371:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1371:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030653138",
                        "id": 13073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1391:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000000"
                        },
                        "value": "2000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13066,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12952,
                        "src": "1356:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                          "typeString": "contract MOCK_ERC20"
                        }
                      },
                      "id": 13068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12375,
                      "src": "1356:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 13074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1356:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13075,
                  "nodeType": "ExpressionStatement",
                  "src": "1356:43:11"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "767:5:11",
            "parameters": {
              "id": 12963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:2:11"
            },
            "returnParameters": {
              "id": 12964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:0:11"
            },
            "scope": 13078,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12936,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2907,
              "src": "434:4:11"
            },
            "id": 12937,
            "nodeType": "InheritanceSpecifier",
            "src": "434:4:11"
          }
        ],
        "contractDependencies": [
          657,
          683,
          14107
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13078,
          2907,
          2470
        ],
        "name": "BaseSetup",
        "nameLocation": "421:9:11",
        "scope": 13990,
        "usedErrors": []
      },
      {
        "id": 13989,
        "nodeType": "ContractDefinition",
        "src": "1415:11018:11",
        "nodes": [
          {
            "id": 13090,
            "nodeType": "FunctionDefinition",
            "src": "1460:66:11",
            "nodes": [],
            "body": {
              "id": 13089,
              "nodeType": "Block",
              "src": "1494:32:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13084,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1505:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Exchange_Test_$13989_$",
                          "typeString": "type(contract super Exchange_Test)"
                        }
                      },
                      "id": 13086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13077,
                      "src": "1505:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:13:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13088,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:13:11"
                }
              ]
            },
            "baseFunctions": [
              13077
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1469:5:11",
            "overrides": {
              "id": 13082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1478:8:11"
            },
            "parameters": {
              "id": 13081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:2:11"
            },
            "returnParameters": {
              "id": 13083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13094,
            "nodeType": "FunctionDefinition",
            "src": "1534:28:11",
            "nodes": [],
            "body": {
              "id": 13093,
              "nodeType": "Block",
              "src": "1560:2:11",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1541:2:11"
            },
            "returnParameters": {
              "id": 13092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1560:0:11"
            },
            "scope": 13989,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13144,
            "nodeType": "FunctionDefinition",
            "src": "1570:402:11",
            "nodes": [],
            "body": {
              "id": 13143,
              "nodeType": "Block",
              "src": "1607:365:11",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13098,
                      "mutability": "mutable",
                      "name": "deposit",
                      "nameLocation": "1623:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13143,
                      "src": "1618:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13097,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1618:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13100,
                  "initialValue": {
                    "hexValue": "323030653138",
                    "id": 13099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1633:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000000000000_by_1",
                      "typeString": "int_const 200000000000000000000"
                    },
                    "value": "200e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1618:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "65786368616e67652e676574526573657276652829206265666f72653a20",
                        "id": 13104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1662:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1782e7a47dbe43c1441b2ceaabb215220a2990629a0f1d117ba0aeddf1135835",
                          "typeString": "literal_string \"exchange.getReserve() before: \""
                        },
                        "value": "exchange.getReserve() before: "
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13105,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "1696:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "1696:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1696:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1782e7a47dbe43c1441b2ceaabb215220a2990629a0f1d117ba0aeddf1135835",
                          "typeString": "literal_string \"exchange.getReserve() before: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13101,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "1650:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "1650:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:68:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13109,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:68:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13113,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13098,
                        "src": "1751:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13110,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "1729:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "1729:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13115,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13121,
                                "name": "exchange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12943,
                                "src": "1805:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              ],
                              "id": 13120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1797:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13119,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1797:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1797:17:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13117,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "1781:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "1781:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1781:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13124,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13098,
                        "src": "1817:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13116,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "1772:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13126,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13128,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "1855:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "1855:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1855:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13131,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13098,
                        "src": "1878:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13127,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "1846:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13133,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:40:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "65786368616e67652e6765745265736572766528292061667465723a20",
                        "id": 13137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1909:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45b2384275934b0aa95e94e73295b00fbb4fcd3682255bd8c1d7a36804bc7a8a",
                          "typeString": "literal_string \"exchange.getReserve() after: \""
                        },
                        "value": "exchange.getReserve() after: "
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13138,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "1942:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "1942:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1942:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_45b2384275934b0aa95e94e73295b00fbb4fcd3682255bd8c1d7a36804bc7a8a",
                          "typeString": "literal_string \"exchange.getReserve() after: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13134,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "1897:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "1897:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13142,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:67:11"
                }
              ]
            },
            "functionSelector": "65c3e67d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_addLiquidity",
            "nameLocation": "1579:17:11",
            "parameters": {
              "id": 13095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:2:11"
            },
            "returnParameters": {
              "id": 13096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13182,
            "nodeType": "FunctionDefinition",
            "src": "2289:709:11",
            "nodes": [],
            "body": {
              "id": 13181,
              "nodeType": "Block",
              "src": "2324:674:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13152,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "2351:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          ],
                          "id": 13151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2343:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13150,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2343:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2343:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2362:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13147,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "2335:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "2335:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2335:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13156,
                  "nodeType": "ExpressionStatement",
                  "src": "2335:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2402:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13157,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "2380:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "2380:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13162,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:29:11"
                },
                {
                  "assignments": [
                    13164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13164,
                      "mutability": "mutable",
                      "name": "ethIn",
                      "nameLocation": "2435:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13181,
                      "src": "2430:10:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2430:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13166,
                  "initialValue": {
                    "hexValue": "31653138",
                    "id": 13165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2443:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2430:17:11"
                },
                {
                  "assignments": [
                    13168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13168,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "2463:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13181,
                      "src": "2458:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13167,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2458:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13173,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13171,
                        "name": "ethIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13164,
                        "src": "2498:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13169,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "2474:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "2474:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2458:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f6b656e4f75743a20",
                        "id": 13177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2527:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17833b89ed689fcf655b70970f4587ea9012ac58959847787bd931c1bbd415f7",
                          "typeString": "literal_string \"tokenOut: \""
                        },
                        "value": "tokenOut: "
                      },
                      {
                        "id": 13178,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13168,
                        "src": "2541:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_17833b89ed689fcf655b70970f4587ea9012ac58959847787bd931c1bbd415f7",
                          "typeString": "literal_string \"tokenOut: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13174,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "2515:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "2515:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2515:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13180,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:36:11"
                }
              ]
            },
            "functionSelector": "13af4202",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getTokenOut",
            "nameLocation": "2298:16:11",
            "parameters": {
              "id": 13145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2314:2:11"
            },
            "returnParameters": {
              "id": 13146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13220,
            "nodeType": "FunctionDefinition",
            "src": "3078:467:11",
            "nodes": [],
            "body": {
              "id": 13219,
              "nodeType": "Block",
              "src": "3111:434:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13190,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "3138:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          ],
                          "id": 13189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3130:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3130:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3130:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3149:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13185,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "3122:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "3122:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13194,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3189:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13195,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "3167:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "3167:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3167:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13200,
                  "nodeType": "ExpressionStatement",
                  "src": "3167:29:11"
                },
                {
                  "assignments": [
                    13202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13202,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "3224:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13219,
                      "src": "3219:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13201,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3219:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13204,
                  "initialValue": {
                    "hexValue": "32653138",
                    "id": 13203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3234:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000"
                    },
                    "value": "2e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3219:19:11"
                },
                {
                  "assignments": [
                    13206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13206,
                      "mutability": "mutable",
                      "name": "ethOut",
                      "nameLocation": "3254:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13219,
                      "src": "3249:11:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13205,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3249:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13209,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13202,
                        "src": "3285:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13207,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "3263:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getEthAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 305,
                      "src": "3263:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3263:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3249:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6574684f75743a20",
                        "id": 13215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3316:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_253e26feea47a5d81d8b4a3ae81b7dec48175ce8972d9a653b5d9f32a1175ee9",
                          "typeString": "literal_string \"ethOut: \""
                        },
                        "value": "ethOut: "
                      },
                      {
                        "id": 13216,
                        "name": "ethOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13206,
                        "src": "3328:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_253e26feea47a5d81d8b4a3ae81b7dec48175ce8972d9a653b5d9f32a1175ee9",
                          "typeString": "literal_string \"ethOut: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13212,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "3304:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "3304:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3304:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13218,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:31:11"
                }
              ]
            },
            "functionSelector": "c731073c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getEthOut",
            "nameLocation": "3087:14:11",
            "parameters": {
              "id": 13183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3101:2:11"
            },
            "returnParameters": {
              "id": 13184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3111:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13575,
            "nodeType": "FunctionDefinition",
            "src": "3589:4507:11",
            "nodes": [],
            "body": {
              "id": 13574,
              "nodeType": "Block",
              "src": "3632:4464:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13228,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3659:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          ],
                          "id": 13227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3651:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3651:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3651:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 13232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 13230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3666:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3673:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3666:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13223,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "3643:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "3643:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13234,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3787:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13235,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12943,
                          "src": "3749:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "3749:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030653138",
                          "id": 13238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3779:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        }
                      ],
                      "src": "3749:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13242,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13246,
                              "name": "exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12943,
                              "src": "3822:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 13245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3814:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3814:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3814:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3814:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3841:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 13243,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "3805:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3805:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13251,
                  "nodeType": "ExpressionStatement",
                  "src": "3805:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13253,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "3868:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "3868:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3868:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323030653138",
                        "id": 13256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3891:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "id": 13252,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "3859:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3859:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13258,
                  "nodeType": "ExpressionStatement",
                  "src": "3859:39:11"
                },
                {
                  "assignments": [
                    13260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13260,
                      "mutability": "mutable",
                      "name": "tokensOut1",
                      "nameLocation": "3971:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13574,
                      "src": "3966:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13259,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3966:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13265,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4009:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13261,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "3985:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "3985:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3966:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13267,
                        "name": "tokensOut1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13260,
                        "src": "4034:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31393630353930313537343431333330383234",
                        "id": 13268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4046:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        },
                        "value": "1960590157441330824"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        }
                      ],
                      "id": 13266,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "4025:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4025:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13270,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4195:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13271,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12943,
                          "src": "4157:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "4157:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030653138",
                          "id": 13274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4187:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        }
                      ],
                      "src": "4157:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4157:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13278,
                  "nodeType": "ExpressionStatement",
                  "src": "4157:45:11"
                },
                {
                  "assignments": [
                    13280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13280,
                      "mutability": "mutable",
                      "name": "tokensOut2",
                      "nameLocation": "4273:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13574,
                      "src": "4268:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13279,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4268:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13285,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4311:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13281,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "4287:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "4287:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4287:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4268:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13287,
                        "name": "tokensOut2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13280,
                        "src": "4336:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31393730323437323735393833383739373935",
                        "id": 13288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4348:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1970247275983879795_by_1",
                          "typeString": "int_const 1970247275983879795"
                        },
                        "value": "1970247275983879795"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1970247275983879795_by_1",
                          "typeString": "int_const 1970247275983879795"
                        }
                      ],
                      "id": 13286,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "4327:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4327:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13290,
                  "nodeType": "ExpressionStatement",
                  "src": "4327:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13296,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4588:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              ],
                              "id": 13295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4580:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13294,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4580:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4580:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13292,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "4564:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "4564:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4564:30:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        },
                        "id": 13301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31363030",
                          "id": 13299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4596:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1600_by_1",
                            "typeString": "int_const 1600"
                          },
                          "value": "1600"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4603:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4596:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1600000000000000000000_by_1",
                          "typeString": "int_const 1600000000000000000000"
                        }
                      ],
                      "id": 13291,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "4555:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13303,
                  "nodeType": "ExpressionStatement",
                  "src": "4555:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33653138",
                        "id": 13309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4657:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3000000000000000000_by_1",
                            "typeString": "int_const 3000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13304,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12943,
                          "src": "4619:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ethToTokenSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 361,
                        "src": "4619:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 13308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "32653138",
                          "id": 13307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4651:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          "value": "2e18"
                        }
                      ],
                      "src": "4619:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 13310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13311,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13315,
                              "name": "exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12943,
                              "src": "4690:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 13314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4682:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13313,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4682:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4682:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4682:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_202000000000000000000_by_1",
                          "typeString": "int_const 202000000000000000000"
                        },
                        "id": 13320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323032",
                          "id": 13318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4709:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_202_by_1",
                            "typeString": "int_const 202"
                          },
                          "value": "202"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4715:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4709:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_202000000000000000000_by_1",
                          "typeString": "int_const 202000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_202000000000000000000_by_1",
                          "typeString": "int_const 202000000000000000000"
                        }
                      ],
                      "id": 13312,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "4673:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:47:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13322,
                  "nodeType": "ExpressionStatement",
                  "src": "4673:47:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13328,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4765:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              ],
                              "id": 13327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4757:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13326,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4757:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4757:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13324,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "4741:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "4741:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4741:30:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31363033393231313830333134383832363631363439",
                        "id": 13331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4773:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1603921180314882661649_by_1",
                          "typeString": "int_const 1603921180314882661649"
                        },
                        "value": "1603921180314882661649"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1603921180314882661649_by_1",
                          "typeString": "int_const 1603921180314882661649"
                        }
                      ],
                      "id": 13323,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "4732:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4732:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13333,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:64:11"
                },
                {
                  "assignments": [
                    13335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13335,
                      "mutability": "mutable",
                      "name": "ethOut",
                      "nameLocation": "4892:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13574,
                      "src": "4887:11:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13334,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4887:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13340,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4923:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13336,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "4901:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getEthAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 305,
                      "src": "4901:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4887:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6574684f75743a20",
                        "id": 13344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4951:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_253e26feea47a5d81d8b4a3ae81b7dec48175ce8972d9a653b5d9f32a1175ee9",
                          "typeString": "literal_string \"ethOut: \""
                        },
                        "value": "ethOut: "
                      },
                      {
                        "id": 13345,
                        "name": "ethOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13335,
                        "src": "4963:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_253e26feea47a5d81d8b4a3ae81b7dec48175ce8972d9a653b5d9f32a1175ee9",
                          "typeString": "literal_string \"ethOut: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13341,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "4939:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "4939:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13347,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13351,
                              "name": "exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12943,
                              "src": "4998:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 13350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4990:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13349,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4990:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4990:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4990:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323032303030303030303030303030303030303030",
                        "id": 13354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5017:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_202000000000000000000_by_1",
                          "typeString": "int_const 202000000000000000000"
                        },
                        "value": "202000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_202000000000000000000_by_1",
                          "typeString": "int_const 202000000000000000000"
                        }
                      ],
                      "id": 13348,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "4981:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4981:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13356,
                  "nodeType": "ExpressionStatement",
                  "src": "4981:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13362,
                                "name": "exchange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12943,
                                "src": "5103:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              ],
                              "id": 13361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5095:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13360,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5095:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5095:17:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13358,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "5079:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "5079:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5079:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333936303738383139363835313137333338333531",
                        "id": 13365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5115:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_396078819685117338351_by_1",
                          "typeString": "int_const 396078819685117338351"
                        },
                        "value": "396078819685117338351"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_396078819685117338351_by_1",
                          "typeString": "int_const 396078819685117338351"
                        }
                      ],
                      "id": 13357,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "5070:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5070:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13367,
                  "nodeType": "ExpressionStatement",
                  "src": "5070:67:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13371,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5193:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            ],
                            "id": 13370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5185:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13369,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5185:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5185:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5185:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "373938303030303030303030303030303030303030",
                        "id": 13374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5208:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_798000000000000000000_by_1",
                          "typeString": "int_const 798000000000000000000"
                        },
                        "value": "798000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_798000000000000000000_by_1",
                          "typeString": "int_const 798000000000000000000"
                        }
                      ],
                      "id": 13368,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "5176:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5176:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13376,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5332:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "id": 13381,
                                "name": "ethOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13335,
                                "src": "5339:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 13382,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5338:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3938",
                            "id": 13383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5349:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_98_by_1",
                              "typeString": "int_const 98"
                            },
                            "value": "98"
                          },
                          "src": "5338:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 13385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5353:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "5338:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13377,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "5308:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenToEthSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 417,
                      "src": "5308:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 13387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13388,
                  "nodeType": "ExpressionStatement",
                  "src": "5308:49:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13392,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5408:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            ],
                            "id": 13391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5400:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13390,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5400:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5400:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5400:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "373938353033363430363533393236343039333035",
                        "id": 13395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5423:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_798503640653926409305_by_1",
                          "typeString": "int_const 798503640653926409305"
                        },
                        "value": "798503640653926409305"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_798503640653926409305_by_1",
                          "typeString": "int_const 798503640653926409305"
                        }
                      ],
                      "id": 13389,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "5391:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5391:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13397,
                  "nodeType": "ExpressionStatement",
                  "src": "5391:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13403,
                                "name": "exchange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12943,
                                "src": "5947:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              ],
                              "id": 13402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5939:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13401,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5939:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5939:17:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13399,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "5923:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "5923:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5923:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333937303738383139363835313137333338333531",
                        "id": 13406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5959:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_397078819685117338351_by_1",
                          "typeString": "int_const 397078819685117338351"
                        },
                        "value": "397078819685117338351"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_397078819685117338351_by_1",
                          "typeString": "int_const 397078819685117338351"
                        }
                      ],
                      "id": 13398,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "5914:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5914:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13408,
                  "nodeType": "ExpressionStatement",
                  "src": "5914:67:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13412,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12960,
                        "src": "6094:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13409,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "6080:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4036,
                      "src": "6080:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6080:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13414,
                  "nodeType": "ExpressionStatement",
                  "src": "6080:20:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13418,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12960,
                        "src": "6143:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6150:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13415,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "6135:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "6135:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6135:22:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13421,
                  "nodeType": "ExpressionStatement",
                  "src": "6135:22:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13425,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12960,
                            "src": "6223:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13423,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "6207:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "6207:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6207:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 13427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6231:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 13422,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "6198:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6198:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13429,
                  "nodeType": "ExpressionStatement",
                  "src": "6198:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13433,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12960,
                              "src": "6261:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6253:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13431,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6253:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6253:14:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6253:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6277:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 13430,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "6244:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6244:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13438,
                  "nodeType": "ExpressionStatement",
                  "src": "6244:40:11"
                },
                {
                  "assignments": [
                    13440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13440,
                      "mutability": "mutable",
                      "name": "ethtoToken_withoutfee",
                      "nameLocation": "6300:21:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13574,
                      "src": "6295:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13439,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6295:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13460,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32653138",
                            "id": 13441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6325:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2e18"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 13446,
                                    "name": "exchange",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12943,
                                    "src": "6356:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Exchange_$584",
                                      "typeString": "contract Exchange"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Exchange_$584",
                                      "typeString": "contract Exchange"
                                    }
                                  ],
                                  "id": 13445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6348:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 13444,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6348:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 13447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6348:17:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 13442,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12949,
                                "src": "6332:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                                  "typeString": "contract MOCK_ERC20"
                                }
                              },
                              "id": 13443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12307,
                              "src": "6332:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 13448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6332:34:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6325:41:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 13450,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6324:43:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 13453,
                                  "name": "exchange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12943,
                                  "src": "6379:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exchange_$584",
                                    "typeString": "contract Exchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exchange_$584",
                                    "typeString": "contract Exchange"
                                  }
                                ],
                                "id": 13452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6371:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 13451,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6371:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 13454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6371:17:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 13455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "6371:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32653138",
                            "id": 13456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6400:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2e18"
                          },
                          "src": "6371:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 13458,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6370:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6324:81:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6295:110:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13462,
                        "name": "ethtoToken_withoutfee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13440,
                        "src": "6426:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33393032353634333539393832373735393835",
                        "id": 13463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6449:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3902564359982775985_by_1",
                          "typeString": "int_const 3902564359982775985"
                        },
                        "value": "3902564359982775985"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3902564359982775985_by_1",
                          "typeString": "int_const 3902564359982775985"
                        }
                      ],
                      "id": 13461,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "6416:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6416:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13465,
                  "nodeType": "ExpressionStatement",
                  "src": "6416:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33653138",
                        "id": 13471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6559:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3000000000000000000_by_1",
                            "typeString": "int_const 3000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13466,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12943,
                          "src": "6521:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ethToTokenSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 361,
                        "src": "6521:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 13470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "32653138",
                          "id": 13469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6553:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          "value": "2e18"
                        }
                      ],
                      "src": "6521:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 13472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6521:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13473,
                  "nodeType": "ExpressionStatement",
                  "src": "6521:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13477,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12960,
                            "src": "6600:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13475,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "6584:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "6584:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6584:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33383633393138343639343633373238363633",
                        "id": 13479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6608:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3863918469463728663_by_1",
                          "typeString": "int_const 3863918469463728663"
                        },
                        "value": "3863918469463728663"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3863918469463728663_by_1",
                          "typeString": "int_const 3863918469463728663"
                        }
                      ],
                      "id": 13474,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "6575:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6575:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13481,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13485,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12960,
                              "src": "6711:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6703:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13483,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6703:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6703:14:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6703:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_98000000000000000000_by_1",
                          "typeString": "int_const 98000000000000000000"
                        },
                        "id": 13490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3938",
                          "id": 13488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6727:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_98_by_1",
                            "typeString": "int_const 98"
                          },
                          "value": "98"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6732:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "6727:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_98000000000000000000_by_1",
                          "typeString": "int_const 98000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_98000000000000000000_by_1",
                          "typeString": "int_const 98000000000000000000"
                        }
                      ],
                      "id": 13482,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "6694:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6694:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13492,
                  "nodeType": "ExpressionStatement",
                  "src": "6694:43:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13493,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "6811:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4053,
                      "src": "6811:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6811:14:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13497,
                  "nodeType": "ExpressionStatement",
                  "src": "6811:14:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13503,
                                "name": "exchange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12943,
                                "src": "6869:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_$584",
                                  "typeString": "contract Exchange"
                                }
                              ],
                              "id": 13502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6861:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13501,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6861:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6861:17:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13499,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "6845:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "6845:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6845:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333933323134393031323135363533363039363838",
                        "id": 13506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6881:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_393214901215653609688_by_1",
                          "typeString": "int_const 393214901215653609688"
                        },
                        "value": "393214901215653609688"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_393214901215653609688_by_1",
                          "typeString": "int_const 393214901215653609688"
                        }
                      ],
                      "id": 13498,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "6836:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6836:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13508,
                  "nodeType": "ExpressionStatement",
                  "src": "6836:67:11"
                },
                {
                  "assignments": [
                    13510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13510,
                      "mutability": "mutable",
                      "name": "LPrewarded",
                      "nameLocation": "7256:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13574,
                      "src": "7251:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13509,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7251:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13518,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13515,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7296:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          ],
                          "id": 13514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7288:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7288:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7288:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13511,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "7269:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12307,
                      "src": "7269:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 13517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7269:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7251:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13520,
                        "name": "LPrewarded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13510,
                        "src": "7322:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "id": 13523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030",
                          "id": 13521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7334:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7340:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "7334:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "id": 13519,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "7313:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7313:32:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13525,
                  "nodeType": "ExpressionStatement",
                  "src": "7313:32:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13529,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7470:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            ],
                            "id": 13528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7462:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13527,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7462:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7462:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "7462:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "373938353033363430363533393236343039333035",
                        "id": 13532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7485:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_798503640653926409305_by_1",
                          "typeString": "int_const 798503640653926409305"
                        },
                        "value": "798503640653926409305"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_798503640653926409305_by_1",
                          "typeString": "int_const 798503640653926409305"
                        }
                      ],
                      "id": 13526,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "7453:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7453:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13534,
                  "nodeType": "ExpressionStatement",
                  "src": "7453:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13540,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7551:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              ],
                              "id": 13539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7543:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13538,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7543:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7543:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13536,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "7527:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "7527:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7527:30:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31363032393231313830333134383832363631363439",
                        "id": 13543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7559:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1602921180314882661649_by_1",
                          "typeString": "int_const 1602921180314882661649"
                        },
                        "value": "1602921180314882661649"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1602921180314882661649_by_1",
                          "typeString": "int_const 1602921180314882661649"
                        }
                      ],
                      "id": 13535,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "7518:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7518:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13545,
                  "nodeType": "ExpressionStatement",
                  "src": "7518:64:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "id": 13551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030",
                          "id": 13549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7620:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7626:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "7620:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13546,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "7595:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "7595:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 13552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7595:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 13553,
                  "nodeType": "ExpressionStatement",
                  "src": "7595:36:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13559,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7678:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                  "typeString": "contract Exchange_Test"
                                }
                              ],
                              "id": 13558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7670:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13557,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7670:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7670:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13555,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "7651:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "7651:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7651:33:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 13562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7686:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 13554,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "7642:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7642:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13564,
                  "nodeType": "ExpressionStatement",
                  "src": "7642:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13568,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7728:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                                "typeString": "contract Exchange_Test"
                              }
                            ],
                            "id": 13567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7720:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13566,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7720:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7720:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "7720:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303032303030303030303030303030303030303030",
                        "id": 13571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7743:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1002000000000000000000_by_1",
                          "typeString": "int_const 1002000000000000000000"
                        },
                        "value": "1002000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1002000000000000000000_by_1",
                          "typeString": "int_const 1002000000000000000000"
                        }
                      ],
                      "id": 13565,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "7711:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7711:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13573,
                  "nodeType": "ExpressionStatement",
                  "src": "7711:55:11"
                }
              ]
            },
            "functionSelector": "2da688e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_addLP_swap_removeLP",
            "nameLocation": "3598:24:11",
            "parameters": {
              "id": 13221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3622:2:11"
            },
            "returnParameters": {
              "id": 13222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3632:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13593,
            "nodeType": "FunctionDefinition",
            "src": "8104:150:11",
            "nodes": [],
            "body": {
              "id": 13592,
              "nodeType": "Block",
              "src": "8140:114:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13579,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "8160:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12263,
                          "src": "8160:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 13581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8160:15:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4554482d4d4f434b204c50",
                        "id": 13582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8177:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50acc7bef232aeafe3cb9a4ce300dc9785a0d5bc8c7cc46eb73200e54abc3613",
                          "typeString": "literal_string \"ETH-MOCK LP\""
                        },
                        "value": "ETH-MOCK LP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50acc7bef232aeafe3cb9a4ce300dc9785a0d5bc8c7cc46eb73200e54abc3613",
                          "typeString": "literal_string \"ETH-MOCK LP\""
                        }
                      ],
                      "id": 13578,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 2323,
                      "src": "8151:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 13583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8151:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13584,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:40:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13586,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "8211:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12273,
                          "src": "8211:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 13588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8211:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4554482d4d4f434b204c50",
                        "id": 13589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8230:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50acc7bef232aeafe3cb9a4ce300dc9785a0d5bc8c7cc46eb73200e54abc3613",
                          "typeString": "literal_string \"ETH-MOCK LP\""
                        },
                        "value": "ETH-MOCK LP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50acc7bef232aeafe3cb9a4ce300dc9785a0d5bc8c7cc46eb73200e54abc3613",
                          "typeString": "literal_string \"ETH-MOCK LP\""
                        }
                      ],
                      "id": 13585,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 2323,
                      "src": "8202:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 13590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8202:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13591,
                  "nodeType": "ExpressionStatement",
                  "src": "8202:42:11"
                }
              ]
            },
            "functionSelector": "fb804ddc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_LPnameSymbol",
            "nameLocation": "8113:17:11",
            "parameters": {
              "id": 13576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8130:2:11"
            },
            "returnParameters": {
              "id": 13577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8140:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13785,
            "nodeType": "FunctionDefinition",
            "src": "8262:1906:11",
            "nodes": [],
            "body": {
              "id": 13784,
              "nodeType": "Block",
              "src": "8302:1866:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13601,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8329:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          ],
                          "id": 13600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8321:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13599,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8321:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8321:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 13605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 13603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8336:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8343:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "8336:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13596,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "8313:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "8313:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8313:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13607,
                  "nodeType": "ExpressionStatement",
                  "src": "8313:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8457:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13608,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12943,
                          "src": "8419:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "8419:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030653138",
                          "id": 13611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8449:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        }
                      ],
                      "src": "8419:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8419:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13615,
                  "nodeType": "ExpressionStatement",
                  "src": "8419:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8514:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13616,
                          "name": "exchange2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12946,
                          "src": "8475:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "8475:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030653138",
                          "id": 13619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8506:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        }
                      ],
                      "src": "8475:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8475:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13623,
                  "nodeType": "ExpressionStatement",
                  "src": "8475:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13627,
                              "name": "exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12943,
                              "src": "8551:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 13626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8543:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13625,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8543:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8543:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "8543:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8570:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 13624,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "8534:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8534:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13632,
                  "nodeType": "ExpressionStatement",
                  "src": "8534:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13636,
                              "name": "exchange2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12946,
                              "src": "8605:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 13635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8597:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13634,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8597:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8597:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "8597:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8625:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 13633,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "8588:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13641,
                  "nodeType": "ExpressionStatement",
                  "src": "8588:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13643,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "8652:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "8652:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8652:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323030653138",
                        "id": 13646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8675:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "id": 13642,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "8643:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8643:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13648,
                  "nodeType": "ExpressionStatement",
                  "src": "8643:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13650,
                            "name": "exchange2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12946,
                            "src": "8702:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "8702:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8702:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323030653138",
                        "id": 13653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8726:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "id": 13649,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "8693:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8693:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13655,
                  "nodeType": "ExpressionStatement",
                  "src": "8693:40:11"
                },
                {
                  "assignments": [
                    13657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13657,
                      "mutability": "mutable",
                      "name": "tokensOut1",
                      "nameLocation": "8806:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13784,
                      "src": "8801:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13656,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8801:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13662,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8844:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13658,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "8820:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "8820:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8820:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8801:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13664,
                        "name": "tokensOut1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13657,
                        "src": "8869:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31393630353930313537343431333330383234",
                        "id": 13665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8881:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        },
                        "value": "1960590157441330824"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        }
                      ],
                      "id": 13663,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "8860:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8860:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13667,
                  "nodeType": "ExpressionStatement",
                  "src": "8860:41:11"
                },
                {
                  "assignments": [
                    13669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13669,
                      "mutability": "mutable",
                      "name": "tokensOut2",
                      "nameLocation": "9014:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13784,
                      "src": "9009:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13668,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9009:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13674,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9053:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13670,
                        "name": "exchange2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12946,
                        "src": "9028:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "9028:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9028:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9009:49:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13676,
                        "name": "tokensOut2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13669,
                        "src": "9078:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31393630353930313537343431333330383234",
                        "id": 13677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9090:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        },
                        "value": "1960590157441330824"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        }
                      ],
                      "id": 13675,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "9069:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9069:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13679,
                  "nodeType": "ExpressionStatement",
                  "src": "9069:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13685,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12960,
                            "src": "9224:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9216:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13683,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9216:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9216:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9232:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13680,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "9208:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "9208:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9208:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13689,
                  "nodeType": "ExpressionStatement",
                  "src": "9208:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13695,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12960,
                            "src": "9273:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9265:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13693,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9265:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9265:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 13697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9281:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13690,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12949,
                        "src": "9250:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                          "typeString": "contract MOCK_ERC20"
                        }
                      },
                      "id": 13692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12332,
                      "src": "9250:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 13698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9250:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13699,
                  "nodeType": "ExpressionStatement",
                  "src": "9250:37:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13703,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12960,
                        "src": "9314:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13700,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "9300:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4036,
                      "src": "9300:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9300:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13705,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:20:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "524f434b2e62616c616e63654f662861646472657373287468697329293a206265666f7265",
                        "id": 13709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9343:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e374b710da0bee2d1227aff6394b589492d4191603d4da16c2a4412590f077a0",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): before\""
                        },
                        "value": "ROCK.balanceOf(address(this)): before"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13714,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "9409:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9401:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13712,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9401:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9401:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13710,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12952,
                            "src": "9384:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "9384:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9384:32:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e374b710da0bee2d1227aff6394b589492d4191603d4da16c2a4412590f077a0",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): before\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13706,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "9331:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "9331:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9331:86:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13718,
                  "nodeType": "ExpressionStatement",
                  "src": "9331:86:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d4f434b2e62616c616e63654f662861646472657373287468697329293a206265666f7265",
                        "id": 13722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9458:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b595576b4b366df07a9570497acef19cbbc46abee5ce7c6e3bdf8b62c56585e4",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): before\""
                        },
                        "value": "MOCK.balanceOf(address(this)): before"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13727,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "9523:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9515:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13725,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9515:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9515:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13723,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "9499:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "9499:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9499:31:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b595576b4b366df07a9570497acef19cbbc46abee5ce7c6e3bdf8b62c56585e4",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): before\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13719,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "9446:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "9446:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9446:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13731,
                  "nodeType": "ExpressionStatement",
                  "src": "9446:85:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13737,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "9593:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          ],
                          "id": 13736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9585:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9585:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9585:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 13739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9604:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13732,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12949,
                        "src": "9571:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                          "typeString": "contract MOCK_ERC20"
                        }
                      },
                      "id": 13734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12375,
                      "src": "9571:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 13740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9571:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13741,
                  "nodeType": "ExpressionStatement",
                  "src": "9571:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 13745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9647:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 13748,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12952,
                            "src": "9662:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          ],
                          "id": 13747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9654:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13746,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9654:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9654:15:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "38653138",
                        "id": 13750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9671:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8000000000000000000_by_1",
                          "typeString": "int_const 8000000000000000000"
                        },
                        "value": "8e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_8000000000000000000_by_1",
                          "typeString": "int_const 8000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13742,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "9621:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenToTokenSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 494,
                      "src": "9621:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256) external"
                      }
                    },
                    "id": 13751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9621:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13752,
                  "nodeType": "ExpressionStatement",
                  "src": "9621:55:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "524f434b2e62616c616e63654f662861646472657373287468697329293a206166746572",
                        "id": 13756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9701:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_def96221c4e734dcc66ef984062b1cea3c003f17ac3048f610faf67a187faa97",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): after\""
                        },
                        "value": "ROCK.balanceOf(address(this)): after"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13761,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "9766:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9758:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13759,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9758:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9758:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13757,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12952,
                            "src": "9741:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "9741:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9741:32:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_def96221c4e734dcc66ef984062b1cea3c003f17ac3048f610faf67a187faa97",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): after\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13753,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "9689:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "9689:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9689:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13765,
                  "nodeType": "ExpressionStatement",
                  "src": "9689:85:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d4f434b2e62616c616e63654f662861646472657373287468697329293a206166746572",
                        "id": 13769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9819:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf5817feb0f87fb265c950467194c4fab0bd1833ae2b59a7af19f49fc9b7bd76",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): after\""
                        },
                        "value": "MOCK.balanceOf(address(this)): after"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13774,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "9883:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9875:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13772,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9875:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9875:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13770,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "9859:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "9859:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9859:31:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bf5817feb0f87fb265c950467194c4fab0bd1833ae2b59a7af19f49fc9b7bd76",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): after\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13766,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "9807:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "9807:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9807:84:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13778,
                  "nodeType": "ExpressionStatement",
                  "src": "9807:84:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13779,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "10146:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4053,
                      "src": "10146:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10146:14:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13783,
                  "nodeType": "ExpressionStatement",
                  "src": "10146:14:11"
                }
              ]
            },
            "functionSelector": "600fa559",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_TokenToTokenSwap",
            "nameLocation": "8271:21:11",
            "parameters": {
              "id": 13594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8292:2:11"
            },
            "returnParameters": {
              "id": 13595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8302:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13988,
            "nodeType": "FunctionDefinition",
            "src": "10176:2252:11",
            "nodes": [],
            "body": {
              "id": 13987,
              "nodeType": "Block",
              "src": "10211:2217:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13793,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10238:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_Test_$13989",
                              "typeString": "contract Exchange_Test"
                            }
                          ],
                          "id": 13792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10230:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10230:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10230:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 13797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 13795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10245:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 13796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10252:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10245:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13788,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "10222:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "10222:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10222:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13799,
                  "nodeType": "ExpressionStatement",
                  "src": "10222:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10366:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13800,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12943,
                          "src": "10328:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "10328:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030653138",
                          "id": 13803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10358:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        }
                      ],
                      "src": "10328:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10328:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13807,
                  "nodeType": "ExpressionStatement",
                  "src": "10328:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030653138",
                        "id": 13813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10423:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13808,
                          "name": "exchange2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12946,
                          "src": "10384:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "10384:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030653138",
                          "id": 13811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10415:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        }
                      ],
                      "src": "10384:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10384:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13815,
                  "nodeType": "ExpressionStatement",
                  "src": "10384:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13819,
                              "name": "exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12943,
                              "src": "10460:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 13818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10452:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13817,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10452:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10452:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10452:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10479:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 13816,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "10443:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10443:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13824,
                  "nodeType": "ExpressionStatement",
                  "src": "10443:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13828,
                              "name": "exchange2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12946,
                              "src": "10514:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$584",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 13827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10506:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13826,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10506:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10506:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10506:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10534:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 13825,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "10497:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10497:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13833,
                  "nodeType": "ExpressionStatement",
                  "src": "10497:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13835,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12943,
                            "src": "10561:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "10561:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10561:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323030653138",
                        "id": 13838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10584:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "id": 13834,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "10552:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10552:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13840,
                  "nodeType": "ExpressionStatement",
                  "src": "10552:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13842,
                            "name": "exchange2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12946,
                            "src": "10611:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$584",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 13843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 245,
                          "src": "10611:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10611:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323030653138",
                        "id": 13845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10635:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "id": 13841,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "10602:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10602:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13847,
                  "nodeType": "ExpressionStatement",
                  "src": "10602:40:11"
                },
                {
                  "assignments": [
                    13849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13849,
                      "mutability": "mutable",
                      "name": "tokensOut1",
                      "nameLocation": "10715:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13987,
                      "src": "10710:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13848,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10710:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13854,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10753:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13850,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "10729:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "10729:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10729:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10710:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13856,
                        "name": "tokensOut1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13849,
                        "src": "10778:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31393630353930313537343431333330383234",
                        "id": 13857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10790:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        },
                        "value": "1960590157441330824"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        }
                      ],
                      "id": 13855,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "10769:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10769:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13859,
                  "nodeType": "ExpressionStatement",
                  "src": "10769:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13865,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12960,
                            "src": "10931:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10923:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13863,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10923:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10923:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 13867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10939:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13860,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "10915:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "10915:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10915:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13869,
                  "nodeType": "ExpressionStatement",
                  "src": "10915:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13873,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12960,
                        "src": "10973:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13870,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "10959:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4036,
                      "src": "10959:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10959:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13875,
                  "nodeType": "ExpressionStatement",
                  "src": "10959:20:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "524f434b2e62616c616e63654f662861646472657373287468697329293a206265666f7265",
                        "id": 13879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11002:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e374b710da0bee2d1227aff6394b589492d4191603d4da16c2a4412590f077a0",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): before\""
                        },
                        "value": "ROCK.balanceOf(address(this)): before"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13884,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "11068:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11060:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13882,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11060:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11060:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13880,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12952,
                            "src": "11043:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "11043:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11043:32:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e374b710da0bee2d1227aff6394b589492d4191603d4da16c2a4412590f077a0",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): before\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13876,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "10990:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "10990:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10990:86:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13888,
                  "nodeType": "ExpressionStatement",
                  "src": "10990:86:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d4f434b2e62616c616e63654f662861646472657373287468697329293a206265666f7265",
                        "id": 13892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11117:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b595576b4b366df07a9570497acef19cbbc46abee5ce7c6e3bdf8b62c56585e4",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): before\""
                        },
                        "value": "MOCK.balanceOf(address(this)): before"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13897,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "11182:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11174:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13895,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11174:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11174:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13893,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "11158:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "11158:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11158:31:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b595576b4b366df07a9570497acef19cbbc46abee5ce7c6e3bdf8b62c56585e4",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): before\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13889,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "11105:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "11105:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11105:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13901,
                  "nodeType": "ExpressionStatement",
                  "src": "11105:85:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616464726573732874686973292e62616c616e63653a206265666f7265",
                        "id": 13905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11231:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c59a10c4ad8290c9e841235749dd8bbd9da1b53910d119bb89469a93d8311803",
                          "typeString": "literal_string \"address(this).balance: before\""
                        },
                        "value": "address(this).balance: before"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13908,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12960,
                              "src": "11272:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11264:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13906,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11264:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11264:14:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "11264:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c59a10c4ad8290c9e841235749dd8bbd9da1b53910d119bb89469a93d8311803",
                          "typeString": "literal_string \"address(this).balance: before\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13902,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "11219:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "11219:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11219:68:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13912,
                  "nodeType": "ExpressionStatement",
                  "src": "11219:68:11"
                },
                {
                  "assignments": [
                    13914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13914,
                      "mutability": "mutable",
                      "name": "tokensOut2",
                      "nameLocation": "11379:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13987,
                      "src": "11374:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13913,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11374:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13919,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "35653138",
                        "id": 13917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11418:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13915,
                        "name": "exchange2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12946,
                        "src": "11393:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "11393:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11393:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11374:49:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13921,
                        "name": "tokensOut2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13914,
                        "src": "11443:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "39343333303633333633353036343331363334",
                        "id": 13922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11455:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9433063363506431634_by_1",
                          "typeString": "int_const 9433063363506431634"
                        },
                        "value": "9433063363506431634"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9433063363506431634_by_1",
                          "typeString": "int_const 9433063363506431634"
                        }
                      ],
                      "id": 13920,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "11434:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11434:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13924,
                  "nodeType": "ExpressionStatement",
                  "src": "11434:41:11"
                },
                {
                  "assignments": [
                    13926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13926,
                      "mutability": "mutable",
                      "name": "tokensOut3",
                      "nameLocation": "11493:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 13987,
                      "src": "11488:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13925,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11488:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13931,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 13929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11532:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13927,
                        "name": "exchange2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12946,
                        "src": "11507:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$584",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 13928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "11507:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11507:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11488:49:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13933,
                        "name": "tokensOut3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13926,
                        "src": "11557:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31393630353930313537343431333330383234",
                        "id": 13934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11569:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        },
                        "value": "1960590157441330824"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1960590157441330824_by_1",
                          "typeString": "int_const 1960590157441330824"
                        }
                      ],
                      "id": 13932,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1029,
                        1059,
                        1084,
                        1143,
                        1168,
                        1198,
                        1223,
                        2323,
                        2358
                      ],
                      "referencedDeclaration": 1198,
                      "src": "11548:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11548:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13936,
                  "nodeType": "ExpressionStatement",
                  "src": "11548:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "38653138",
                        "id": 13942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11759:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8000000000000000000_by_1",
                          "typeString": "int_const 8000000000000000000"
                        },
                        "value": "8e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_8000000000000000000_by_1",
                          "typeString": "int_const 8000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_8000000000000000000_by_1",
                            "typeString": "int_const 8000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 13937,
                          "name": "exchange2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12946,
                          "src": "11719:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$584",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 13939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ethToTokenSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 361,
                        "src": "11719:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 13941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "35653138",
                          "id": 13940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11752:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000000000000000000_by_1",
                            "typeString": "int_const 5000000000000000000"
                          },
                          "value": "5e18"
                        }
                      ],
                      "src": "11719:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 13943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11719:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13944,
                  "nodeType": "ExpressionStatement",
                  "src": "11719:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "524f434b2e62616c616e63654f662861646472657373287468697329293a206166746572",
                        "id": 13948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11789:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_def96221c4e734dcc66ef984062b1cea3c003f17ac3048f610faf67a187faa97",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): after\""
                        },
                        "value": "ROCK.balanceOf(address(this)): after"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13953,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "11854:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11846:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13951,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11846:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11846:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13949,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12952,
                            "src": "11829:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "11829:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11829:32:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_def96221c4e734dcc66ef984062b1cea3c003f17ac3048f610faf67a187faa97",
                          "typeString": "literal_string \"ROCK.balanceOf(address(this)): after\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13945,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "11777:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "11777:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11777:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13957,
                  "nodeType": "ExpressionStatement",
                  "src": "11777:85:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d4f434b2e62616c616e63654f662861646472657373287468697329293a206166746572",
                        "id": 13961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11909:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf5817feb0f87fb265c950467194c4fab0bd1833ae2b59a7af19f49fc9b7bd76",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): after\""
                        },
                        "value": "MOCK.balanceOf(address(this)): after"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13966,
                                "name": "user1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12960,
                                "src": "11973:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11965:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13964,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11965:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11965:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13962,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12949,
                            "src": "11949:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MOCK_ERC20_$683",
                              "typeString": "contract MOCK_ERC20"
                            }
                          },
                          "id": 13963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12307,
                          "src": "11949:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 13968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11949:31:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bf5817feb0f87fb265c950467194c4fab0bd1833ae2b59a7af19f49fc9b7bd76",
                          "typeString": "literal_string \"MOCK.balanceOf(address(this)): after\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13958,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "11897:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "11897:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11897:84:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13970,
                  "nodeType": "ExpressionStatement",
                  "src": "11897:84:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616464726573732874686973292e62616c616e63653a206166746572",
                        "id": 13974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12022:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2dab80165ebe7be92a73c1be8fe5b0305f2b2ec0967edf77c1bc24d494a3487",
                          "typeString": "literal_string \"address(this).balance: after\""
                        },
                        "value": "address(this).balance: after"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13977,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12960,
                              "src": "12062:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12054:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13975,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12054:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12054:14:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12054:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b2dab80165ebe7be92a73c1be8fe5b0305f2b2ec0967edf77c1bc24d494a3487",
                          "typeString": "literal_string \"address(this).balance: after\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13971,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "12010:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12208_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 13973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "12010:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 13980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12010:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13981,
                  "nodeType": "ExpressionStatement",
                  "src": "12010:67:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13982,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "12406:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4144",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4053,
                      "src": "12406:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12406:14:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13986,
                  "nodeType": "ExpressionStatement",
                  "src": "12406:14:11"
                }
              ]
            },
            "functionSelector": "56f0b0dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ethToTokenB",
            "nameLocation": "10185:16:11",
            "parameters": {
              "id": 13786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10201:2:11"
            },
            "returnParameters": {
              "id": 13787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10211:0:11"
            },
            "scope": 13989,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13079,
              "name": "BaseSetup",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13078,
              "src": "1441:9:11"
            },
            "id": 13080,
            "nodeType": "InheritanceSpecifier",
            "src": "1441:9:11"
          }
        ],
        "contractDependencies": [
          657,
          683,
          14107
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13989,
          13078,
          2907,
          2470
        ],
        "name": "Exchange_Test",
        "nameLocation": "1424:13:11",
        "scope": 13990,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 11
}